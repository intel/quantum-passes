//===----------------------------------------------------------------------===//
//
// Copyright (C) 2022 Intel Corporation
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//
//
// This file provides a quantum program to test the routing algos and
// scheduler implementation.
//
//===----------------------------------------------------------------------===//

/// Circuit that we want to schedule:
///
/// q0: |0> -- * ------- D~
///            |
/// q1: |0> -- | ------- D~
///            |
/// q2: |0> -- | -- * -- D~
///            |    |
/// q3: |0> -- X ---|--- D~
///                 |
/// q4: |0> --------|--- D~
///                 |
/// q5: |0> --------|--- D~
///                 |
/// q6: |0> ------- X -- D~
/// 
/// Greedy schedule for circuit:
///  q0:   0  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  8  =  13
///  q1:   1  .  .  .  .  .  .  .  .  .  -2 =  =  =  =  =  =  =  8  =  9  15 -7 =  =  =  =  =  =  =
///  q2:   2  .  -1 =  =  =  =  =  =  =  -2 =  =  =  =  =  =  =  .  .  .  .  -7 =  =  =  =  =  =  =  -8 =  =  =  =  =  =  =
///  q3:   3  7  -1 =  =  =  =  =  =  =  .  .  .  .  .  .  .  .  11 =  14 .  .  .  .  .  .  .  .  .  -8 =  =  =  =  =  =  =
///  q4:   4  .  .  .  .  .  .  .  .  .  -4 =  =  =  =  =  =  =  11 =  12 16 -5 =  =  =  =  =  =  =
///  q5:   5  .  -3 =  =  =  =  =  =  =  -4 =  =  =  =  =  =  =  .  .  .  .  -5 =  =  =  =  =  =  =  -6 =  =  =  =  =  =  =
///  q6:   6  10 -3 =  =  =  =  =  =  =  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  -6 =  =  =  =  =  =  =
/// 
///                                                             ^^^                           ...^^^^^^^^^^^...
///                                                   Q0, Q3, Q1, Q2, Q6, Q4, Q5                  (retrace)

#include <clang/Quantum/quintrinsics.h>

const int N = 7;
qbit q[N];
cbit c[4];

quantum_kernel void circuit() {
  for (int i = 0; i <N; i++)
    PrepZ(q[i]);

  CNOT(q[0], q[3]);
  CNOT(q[2], q[6]);

  MeasZ(q[0], c[0]);
  MeasZ(q[2], c[1]);
  MeasZ(q[3], c[2]);
  MeasZ(q[6], c[3]);

//  release_quantum_state();
}

//===----------------------------------------------------------------------===//

int main() {

  circuit();
  return 0;
}
