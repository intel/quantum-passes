; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 2
; RUN: opt -S %loadintelquantumpasses -p=q-classical-module-split %s -o - | FileCheck %s --dump-input fail
; ModuleID = '<stdin>'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [325 x i8] c"{     \22matrix_real\22 : \221/sqrt(2)*[1, 1, 1, -1]\22,     \22matrix_imag\22 : [0, 0, 0, 0],     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : true,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [4],     \22identifier\22 : 3   }\00", section "llvm.metadata"
@.str.1 = private unnamed_addr constant [37 x i8] c"include/clang/Quantum/quintrinsics.h\00", section "llvm.metadata"
@.str.2 = private unnamed_addr constant [313 x i8] c"{     \22matrix_real\22 : [0, 1, 1, 0],     \22matrix_imag\22 : [0, 0, 0, 0],     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : true,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [1],     \22identifier\22 : 12   }\00", section "llvm.metadata"
@.str.3 = private unnamed_addr constant [314 x i8] c"{     \22matrix_real\22 : [0, 0, 0, 0],     \22matrix_imag\22 : [0, -1, 1, 0],     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : true,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [2],     \22identifier\22 : 18   }\00", section "llvm.metadata"
@.str.4 = private unnamed_addr constant [313 x i8] c"{     \22matrix_real\22 : [1, 0, 0, -1],     \22matrix_imag\22 : [0, 0, 0, 0],     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : true,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [3],     \22identifier\22 : 6   }\00", section "llvm.metadata"
@.str.5 = private unnamed_addr constant [313 x i8] c"{     \22matrix_real\22 : [1, 0, 0, 0],     \22matrix_imag\22 : [0, 0, 0, 1],     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [3],     \22identifier\22 : 5   }\00", section "llvm.metadata"
@.str.6 = private unnamed_addr constant [315 x i8] c"{     \22matrix_real\22 : [1, 0, 0, 0],     \22matrix_imag\22 : [0, 0, 0, -1],     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [3],     \22identifier\22 : 11   }\00", section "llvm.metadata"
@.str.7 = private unnamed_addr constant [334 x i8] c"{     \22matrix_real\22 : \22[1, 0, 0, cos(pi/4)]\22,     \22matrix_imag\22 : \22[0, 0, 0, sin(pi/4)]\22,     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [3],     \22identifier\22 : 24   }\00", section "llvm.metadata"
@.str.8 = private unnamed_addr constant [335 x i8] c"{     \22matrix_real\22 : \22[1, 0, 0, cos(pi/4)]\22,     \22matrix_imag\22 : \22[0, 0, 0, -sin(pi/4)]\22,     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [3],     \22identifier\22 : 25   }\00", section "llvm.metadata"
@.str.9 = private unnamed_addr constant [364 x i8] c"{     \22matrix_real\22 : \22[cos(angle/2), 0, 0, cos(angle/2)]\22,     \22matrix_imag\22 : \22[0, -sin(angle/2), sin(angle/2), 0]\22,     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [1],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [1],     \22identifier\22 : 26   }\00", section "llvm.metadata"
@.str.10 = private unnamed_addr constant [362 x i8] c"{     \22matrix_real\22 : \22[cos(angle/2), -sin(angle/2), sin(angle/2), cos(angle/2)]\22,     \22matrix_imag\22 : [0, 0, 0, 0],     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [1],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [2],     \22identifier\22 : 27   }\00", section "llvm.metadata"
@.str.11 = private unnamed_addr constant [364 x i8] c"{     \22matrix_real\22 : \22[cos(angle/2), 0, 0, cos(angle/2)]\22,     \22matrix_imag\22 : \22[-sin(angle/2), 0, 0, sin(angle/2)]\22,     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [1],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [3],     \22identifier\22 : 28   }\00", section "llvm.metadata"
@.str.12 = private unnamed_addr constant [396 x i8] c"{     \22matrix_real\22 : [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, -1],     \22matrix_imag\22 : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : true,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0, 1],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [0, 1],     \22local_basis_list\22 : [3, 3],     \22identifier\22 : 37   }\00", section "llvm.metadata"
@.str.13 = private unnamed_addr constant [392 x i8] c"{     \22matrix_real\22 : [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0],     \22matrix_imag\22 : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : true,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0, 1],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [0],     \22local_basis_list\22 : [3, 1],     \22identifier\22 : 35   }\00", section "llvm.metadata"
@.str.14 = private unnamed_addr constant [391 x i8] c"{     \22matrix_real\22 : [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1],     \22matrix_imag\22 : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : true,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0, 1],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [0, 0],     \22identifier\22 : 38   }\00", section "llvm.metadata"
@.str.15 = private unnamed_addr constant [689 x i8] c"{     \22matrix_real\22 : [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0],     \22matrix_imag\22 : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : true,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0, 1, 2],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [0, 1],     \22local_basis_list\22 : [3, 3, 1],     \22identifier\22 : 39   }\00", section "llvm.metadata"
@.str.16 = private unnamed_addr constant [417 x i8] c"{     \22matrix_real\22 : \22{qt(prob0) : [0.5, 0.5, 0.5, 0.5], qt(prob1) : [0.5, -0.5, 0.5, -0.5]}\22,     \22matrix_imag\22 : \22{qt(prob0) : [0, 0, 0, 0], qt(prob1) : [0, 0, 0, 0]}\22,     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : false,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [1],     \22identifier\22 : 40   }\00", section "llvm.metadata"
@.str.17 = private unnamed_addr constant [417 x i8] c"{     \22matrix_real\22 : \22{qt(prob0) : [0.5, 0, 0, 0.5], qt(prob1) : [0.5, 0, 0, -0.5]}\22,     \22matrix_imag\22 : \22{qt(prob0) : [0, 0.5, -0.5, 0], qt(prob1) : [0, 0.5, 0.5, 0]}\22,     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : false,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [2],     \22identifier\22 : 41   }\00", section "llvm.metadata"
@.str.18 = private unnamed_addr constant [399 x i8] c"{     \22matrix_real\22 : \22{qt(prob0) : [1, 0, 0, 0], qt(prob1) : [0, 1, 0, 0]}\22,     \22matrix_imag\22 : \22{qt(prob0) : [0, 0, 0, 0], qt(prob1) : [0, 0, 0, 0]}\22,     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : false,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [3],     \22identifier\22 : 42   }\00", section "llvm.metadata"
@.str.19 = private unnamed_addr constant [421 x i8] c"{     \22matrix_real\22 : \22{qt(prob0) : [0.5, 0.5, 0.5, 0.5], qt(prob1) : [0.5, -0.5, -0.5, 0.5]}\22,     \22matrix_imag\22 : \22{qt(prob0) : [0, 0, 0, 0], qt(prob1) : [0, 0, 0, 0]}\22,     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : false,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [1, 2],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [1],     \22identifier\22 : 43   }\00", section "llvm.metadata"
@.str.20 = private unnamed_addr constant [421 x i8] c"{     \22matrix_real\22 : \22{qt(prob0) : [0.5, 0, 0, 0.5], qt(prob1) : [0.5, 0, 0, 0.5]}\22,     \22matrix_imag\22 : \22{qt(prob0) : [0, 0.5, -0.5, 0], qt(prob1) : [0, -0.5, 0.5, 0]}\22,     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : false,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [1, 2],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [2],     \22identifier\22 : 44   }\00", section "llvm.metadata"
@.str.21 = private unnamed_addr constant [403 x i8] c"{     \22matrix_real\22 : \22{qt(prob0) : [1, 0, 0, 0], qt(prob1) : [0, 0, 0, 1]}\22,     \22matrix_imag\22 : \22{qt(prob0) : [0, 0, 0, 0], qt(prob1) : [0, 0, 0, 0]}\22,     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : false,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [1, 2],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [3],     \22identifier\22 : 45   }\00", section "llvm.metadata"
@.str.22 = private unnamed_addr constant [420 x i8] c"{     \22matrix_real\22 : \22[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, cos(angle)]\22,     \22matrix_imag\22 : \22[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -sin(angle)]\22,     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0, 1],     \22parametric_list\22 : [2],     \22control_qubit_list\22 : [0, 1],     \22local_basis_list\22 : [3, 3],     \22identifier\22 : 46   }\00", section "llvm.metadata"
@.str.23 = private unnamed_addr constant [423 x i8] c"{     \22matrix_real\22 : \22[cos(theta/2), -sin(theta/2) sin(phi), sin(theta/2) sin(phi), cos(theta/2)]\22,     \22matrix_imag\22 : \22[0, -sin(theta/2)cos(phi), sin(theta/2)cos(phi), 0]\22,     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [1,2],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [0],     \22identifier\22 : 47   }\00", section "llvm.metadata"
@.str.24 = private unnamed_addr constant [503 x i8] c"{     \22matrix_real\22 : \22[1, 0, 0, 0, 0, (1+cos(angle))/2, (1-cos(angle))/2, 0, 0, (1-cos(angle))/2, (1+cos(angle))/2, 0, 0, 0, 0, 1]\22,     \22matrix_imag\22 : \22[1, 0, 0, 0, 0, sin(angle)/2, -sin(angle)/2, 0, 0, -sin(angle)/2, sin(angle)/2, 0, 0, 0, 0, 1]\22,     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0, 1],     \22parametric_list\22 : [2],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [0, 0],     \22identifier\22 : 53   }\00", section "llvm.metadata"
@q = dso_local global [3 x i16] [i16 0, i16 1, i16 2], align 2
@c = dso_local global i8 0, align 1
@llvm.global.annotations = appending global [24 x { ptr, ptr, ptr, i32, ptr }] [{ ptr, ptr, ptr, i32, ptr } { ptr undef, ptr @.str, ptr @.str.1, i32 48, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr undef, ptr @.str.2, ptr @.str.1, i32 68, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr undef, ptr @.str.3, ptr @.str.1, i32 88, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr undef, ptr @.str.4, ptr @.str.1, i32 109, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr undef, ptr @.str.5, ptr @.str.1, i32 129, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr undef, ptr @.str.6, ptr @.str.1, i32 149, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr undef, ptr @.str.7, ptr @.str.1, i32 169, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr undef, ptr @.str.8, ptr @.str.1, i32 189, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr undef, ptr @.str.9, ptr @.str.1, i32 209, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr undef, ptr @.str.10, ptr @.str.1, i32 230, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr undef, ptr @.str.11, ptr @.str.1, i32 251, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr undef, ptr @.str.12, ptr @.str.1, i32 272, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr undef, ptr @.str.13, ptr @.str.1, i32 293, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr undef, ptr @.str.14, ptr @.str.1, i32 314, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr undef, ptr @.str.15, ptr @.str.1, i32 335, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr undef, ptr @.str.16, ptr @.str.1, i32 359, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr undef, ptr @.str.17, ptr @.str.1, i32 377, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr undef, ptr @.str.18, ptr @.str.1, i32 395, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr undef, ptr @.str.19, ptr @.str.1, i32 413, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr undef, ptr @.str.20, ptr @.str.1, i32 433, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr undef, ptr @.str.21, ptr @.str.1, i32 453, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr undef, ptr @.str.22, ptr @.str.1, i32 481, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr undef, ptr @.str.23, ptr @.str.1, i32 503, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr undef, ptr @.str.24, ptr @.str.1, i32 525, ptr null }], section "llvm.metadata"
@aqcc.qsda = global [65536 x double] zeroinitializer #0

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z5HCallv.stub() local_unnamed_addr #1 {
; CHECK-LABEL: define dso_local void @_Z5HCallv.stub
; CHECK-SAME: () local_unnamed_addr #[[ATTR1:[0-9]+]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br label [[AQCC_QUANTUM:%.*]]
; CHECK:       aqcc.quantum:
; CHECK-NEXT:    [[QRTCALL:%.*]] = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z14HCall().QBB.0.v.stub", i32 2)
; CHECK-NEXT:    br label [[AQCC_MEAS_MOVE_END:%.*]]
; CHECK:       aqcc.meas.move.end:
; CHECK-NEXT:    store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
; CHECK-NEXT:    ret void
;
entry:
  br label %aqcc.quantum

aqcc.quantum:                                     ; preds = %entry
  %QRTcall = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z14HCall().QBB.0.v.stub", i32 2)
  br label %aqcc.meas.move.end

aqcc.meas.move.end:                               ; preds = %aqcc.quantum
  store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z5XCallv.stub() local_unnamed_addr #1 {
; CHECK-LABEL: define dso_local void @_Z5XCallv.stub
; CHECK-SAME: () local_unnamed_addr #[[ATTR1]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br label [[AQCC_QUANTUM:%.*]]
; CHECK:       aqcc.quantum:
; CHECK-NEXT:    [[QRTCALL:%.*]] = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z14XCall().QBB.1.v.stub", i32 1)
; CHECK-NEXT:    br label [[AQCC_MEAS_MOVE_END:%.*]]
; CHECK:       aqcc.meas.move.end:
; CHECK-NEXT:    store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
; CHECK-NEXT:    ret void
;
entry:
  br label %aqcc.quantum

aqcc.quantum:                                     ; preds = %entry
  %QRTcall = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z14XCall().QBB.1.v.stub", i32 1)
  br label %aqcc.meas.move.end

aqcc.meas.move.end:                               ; preds = %aqcc.quantum
  store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z5YCallv.stub() local_unnamed_addr #1 {
; CHECK-LABEL: define dso_local void @_Z5YCallv.stub
; CHECK-SAME: () local_unnamed_addr #[[ATTR1]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br label [[AQCC_QUANTUM:%.*]]
; CHECK:       aqcc.quantum:
; CHECK-NEXT:    [[QRTCALL:%.*]] = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z14YCall().QBB.2.v.stub", i32 1)
; CHECK-NEXT:    br label [[AQCC_MEAS_MOVE_END:%.*]]
; CHECK:       aqcc.meas.move.end:
; CHECK-NEXT:    store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
; CHECK-NEXT:    ret void
;
entry:
  br label %aqcc.quantum

aqcc.quantum:                                     ; preds = %entry
  %QRTcall = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z14YCall().QBB.2.v.stub", i32 1)
  br label %aqcc.meas.move.end

aqcc.meas.move.end:                               ; preds = %aqcc.quantum
  store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z5ZCallv.stub() local_unnamed_addr #1 {
; CHECK-LABEL: define dso_local void @_Z5ZCallv.stub
; CHECK-SAME: () local_unnamed_addr #[[ATTR1]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br label [[AQCC_QUANTUM:%.*]]
; CHECK:       aqcc.quantum:
; CHECK-NEXT:    [[QRTCALL:%.*]] = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z14ZCall().QBB.3.v.stub", i32 2)
; CHECK-NEXT:    br label [[AQCC_MEAS_MOVE_END:%.*]]
; CHECK:       aqcc.meas.move.end:
; CHECK-NEXT:    store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
; CHECK-NEXT:    ret void
;
entry:
  br label %aqcc.quantum

aqcc.quantum:                                     ; preds = %entry
  %QRTcall = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z14ZCall().QBB.3.v.stub", i32 2)
  br label %aqcc.meas.move.end

aqcc.meas.move.end:                               ; preds = %aqcc.quantum
  store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z5SCallv.stub() local_unnamed_addr #1 {
; CHECK-LABEL: define dso_local void @_Z5SCallv.stub
; CHECK-SAME: () local_unnamed_addr #[[ATTR1]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br label [[AQCC_QUANTUM:%.*]]
; CHECK:       aqcc.quantum:
; CHECK-NEXT:    [[QRTCALL:%.*]] = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z14SCall().QBB.4.v.stub", i32 2)
; CHECK-NEXT:    br label [[AQCC_MEAS_MOVE_END:%.*]]
; CHECK:       aqcc.meas.move.end:
; CHECK-NEXT:    store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
; CHECK-NEXT:    ret void
;
entry:
  br label %aqcc.quantum

aqcc.quantum:                                     ; preds = %entry
  %QRTcall = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z14SCall().QBB.4.v.stub", i32 2)
  br label %aqcc.meas.move.end

aqcc.meas.move.end:                               ; preds = %aqcc.quantum
  store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z8SdagCallv.stub() local_unnamed_addr #1 {
; CHECK-LABEL: define dso_local void @_Z8SdagCallv.stub
; CHECK-SAME: () local_unnamed_addr #[[ATTR1]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br label [[AQCC_QUANTUM:%.*]]
; CHECK:       aqcc.quantum:
; CHECK-NEXT:    [[QRTCALL:%.*]] = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z17SdagCall().QBB.5.v.stub", i32 2)
; CHECK-NEXT:    br label [[AQCC_MEAS_MOVE_END:%.*]]
; CHECK:       aqcc.meas.move.end:
; CHECK-NEXT:    store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
; CHECK-NEXT:    ret void
;
entry:
  br label %aqcc.quantum

aqcc.quantum:                                     ; preds = %entry
  %QRTcall = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z17SdagCall().QBB.5.v.stub", i32 2)
  br label %aqcc.meas.move.end

aqcc.meas.move.end:                               ; preds = %aqcc.quantum
  store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z5TCallv.stub() local_unnamed_addr #1 {
; CHECK-LABEL: define dso_local void @_Z5TCallv.stub
; CHECK-SAME: () local_unnamed_addr #[[ATTR1]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br label [[AQCC_QUANTUM:%.*]]
; CHECK:       aqcc.quantum:
; CHECK-NEXT:    [[QRTCALL:%.*]] = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z14TCall().QBB.6.v.stub", i32 2)
; CHECK-NEXT:    br label [[AQCC_MEAS_MOVE_END:%.*]]
; CHECK:       aqcc.meas.move.end:
; CHECK-NEXT:    store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
; CHECK-NEXT:    ret void
;
entry:
  br label %aqcc.quantum

aqcc.quantum:                                     ; preds = %entry
  %QRTcall = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z14TCall().QBB.6.v.stub", i32 2)
  br label %aqcc.meas.move.end

aqcc.meas.move.end:                               ; preds = %aqcc.quantum
  store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z8TdagCallv.stub() local_unnamed_addr #1 {
; CHECK-LABEL: define dso_local void @_Z8TdagCallv.stub
; CHECK-SAME: () local_unnamed_addr #[[ATTR1]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br label [[AQCC_QUANTUM:%.*]]
; CHECK:       aqcc.quantum:
; CHECK-NEXT:    [[QRTCALL:%.*]] = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z17TdagCall().QBB.7.v.stub", i32 2)
; CHECK-NEXT:    br label [[AQCC_MEAS_MOVE_END:%.*]]
; CHECK:       aqcc.meas.move.end:
; CHECK-NEXT:    store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
; CHECK-NEXT:    ret void
;
entry:
  br label %aqcc.quantum

aqcc.quantum:                                     ; preds = %entry
  %QRTcall = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z17TdagCall().QBB.7.v.stub", i32 2)
  br label %aqcc.meas.move.end

aqcc.meas.move.end:                               ; preds = %aqcc.quantum
  store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z6RXCalld.stub(double noundef %ang) local_unnamed_addr #1 {
; CHECK-LABEL: define dso_local void @_Z6RXCalld.stub
; CHECK-SAME: (double noundef [[ANG:%.*]]) local_unnamed_addr #[[ATTR1]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    store double [[ANG]], ptr getelementptr inbounds ([65536 x double], ptr @aqcc.qsda, i64 0, i64 4), align 8
; CHECK-NEXT:    br label [[AQCC_QUANTUM:%.*]]
; CHECK:       aqcc.quantum:
; CHECK-NEXT:    [[QRTCALL:%.*]] = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z21RXCall(double).QBB.8.v.stub", i32 2)
; CHECK-NEXT:    br label [[AQCC_MEAS_MOVE_END:%.*]]
; CHECK:       aqcc.meas.move.end:
; CHECK-NEXT:    store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
; CHECK-NEXT:    ret void
;
entry:
  store double %ang, ptr getelementptr inbounds ([65536 x double], ptr @aqcc.qsda, i64 0, i64 4), align 8
  br label %aqcc.quantum

aqcc.quantum:                                     ; preds = %entry
  %QRTcall = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z21RXCall(double).QBB.8.v.stub", i32 2)
  br label %aqcc.meas.move.end

aqcc.meas.move.end:                               ; preds = %aqcc.quantum
  store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z6RYCalld.stub(double noundef %ang) local_unnamed_addr #1 {
; CHECK-LABEL: define dso_local void @_Z6RYCalld.stub
; CHECK-SAME: (double noundef [[ANG:%.*]]) local_unnamed_addr #[[ATTR1]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    store double [[ANG]], ptr getelementptr inbounds ([65536 x double], ptr @aqcc.qsda, i64 0, i64 4), align 8
; CHECK-NEXT:    br label [[AQCC_QUANTUM:%.*]]
; CHECK:       aqcc.quantum:
; CHECK-NEXT:    [[QRTCALL:%.*]] = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z21RYCall(double).QBB.9.v.stub", i32 2)
; CHECK-NEXT:    br label [[AQCC_MEAS_MOVE_END:%.*]]
; CHECK:       aqcc.meas.move.end:
; CHECK-NEXT:    store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
; CHECK-NEXT:    ret void
;
entry:
  store double %ang, ptr getelementptr inbounds ([65536 x double], ptr @aqcc.qsda, i64 0, i64 4), align 8
  br label %aqcc.quantum

aqcc.quantum:                                     ; preds = %entry
  %QRTcall = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z21RYCall(double).QBB.9.v.stub", i32 2)
  br label %aqcc.meas.move.end

aqcc.meas.move.end:                               ; preds = %aqcc.quantum
  store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z6RZCalld.stub(double noundef %ang) local_unnamed_addr #1 {
; CHECK-LABEL: define dso_local void @_Z6RZCalld.stub
; CHECK-SAME: (double noundef [[ANG:%.*]]) local_unnamed_addr #[[ATTR1]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[TMP0:%.*]] = fmul double [[ANG]], 5.000000e-01
; CHECK-NEXT:    store double [[TMP0]], ptr getelementptr inbounds ([65536 x double], ptr @aqcc.qsda, i64 0, i64 4), align 8
; CHECK-NEXT:    br label [[AQCC_QUANTUM:%.*]]
; CHECK:       aqcc.quantum:
; CHECK-NEXT:    [[QRTCALL:%.*]] = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z22RZCall(double).QBB.10.v.stub", i32 4)
; CHECK-NEXT:    br label [[AQCC_MEAS_MOVE_END:%.*]]
; CHECK:       aqcc.meas.move.end:
; CHECK-NEXT:    store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
; CHECK-NEXT:    ret void
;
entry:
  %0 = fmul double %ang, 5.000000e-01
  store double %0, ptr getelementptr inbounds ([65536 x double], ptr @aqcc.qsda, i64 0, i64 4), align 8
  br label %aqcc.quantum

aqcc.quantum:                                     ; preds = %entry
  %QRTcall = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z22RZCall(double).QBB.10.v.stub", i32 4)
  br label %aqcc.meas.move.end

aqcc.meas.move.end:                               ; preds = %aqcc.quantum
  store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z6CZCallv.stub() local_unnamed_addr #1 {
; CHECK-LABEL: define dso_local void @_Z6CZCallv.stub
; CHECK-SAME: () local_unnamed_addr #[[ATTR1]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br label [[AQCC_QUANTUM:%.*]]
; CHECK:       aqcc.quantum:
; CHECK-NEXT:    [[QRTCALL:%.*]] = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z16CZCall().QBB.11.v.stub", i32 1)
; CHECK-NEXT:    br label [[AQCC_MEAS_MOVE_END:%.*]]
; CHECK:       aqcc.meas.move.end:
; CHECK-NEXT:    store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
; CHECK-NEXT:    ret void
;
entry:
  br label %aqcc.quantum

aqcc.quantum:                                     ; preds = %entry
  %QRTcall = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z16CZCall().QBB.11.v.stub", i32 1)
  br label %aqcc.meas.move.end

aqcc.meas.move.end:                               ; preds = %aqcc.quantum
  store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z8CNOTCallv.stub() local_unnamed_addr #1 {
; CHECK-LABEL: define dso_local void @_Z8CNOTCallv.stub
; CHECK-SAME: () local_unnamed_addr #[[ATTR1]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br label [[AQCC_QUANTUM:%.*]]
; CHECK:       aqcc.quantum:
; CHECK-NEXT:    [[QRTCALL:%.*]] = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z18CNOTCall().QBB.12.v.stub", i32 3)
; CHECK-NEXT:    br label [[AQCC_MEAS_MOVE_END:%.*]]
; CHECK:       aqcc.meas.move.end:
; CHECK-NEXT:    store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
; CHECK-NEXT:    ret void
;
entry:
  br label %aqcc.quantum

aqcc.quantum:                                     ; preds = %entry
  %QRTcall = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z18CNOTCall().QBB.12.v.stub", i32 3)
  br label %aqcc.meas.move.end

aqcc.meas.move.end:                               ; preds = %aqcc.quantum
  store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z8SWAPCallv.stub() local_unnamed_addr #1 {
; CHECK-LABEL: define dso_local void @_Z8SWAPCallv.stub
; CHECK-SAME: () local_unnamed_addr #[[ATTR1]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br label [[AQCC_QUANTUM:%.*]]
; CHECK:       aqcc.quantum:
; CHECK-NEXT:    [[QRTCALL:%.*]] = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z18SWAPCall().QBB.13.v.stub", i32 1)
; CHECK-NEXT:    br label [[AQCC_MEAS_MOVE_END:%.*]]
; CHECK:       aqcc.meas.move.end:
; CHECK-NEXT:    store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
; CHECK-NEXT:    ret void
;
entry:
  br label %aqcc.quantum

aqcc.quantum:                                     ; preds = %entry
  %QRTcall = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z18SWAPCall().QBB.13.v.stub", i32 1)
  br label %aqcc.meas.move.end

aqcc.meas.move.end:                               ; preds = %aqcc.quantum
  store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z11ToffoliCallv.stub() local_unnamed_addr #1 {
; CHECK-LABEL: define dso_local void @_Z11ToffoliCallv.stub
; CHECK-SAME: () local_unnamed_addr #[[ATTR1]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br label [[AQCC_QUANTUM:%.*]]
; CHECK:       aqcc.quantum:
; CHECK-NEXT:    [[QRTCALL:%.*]] = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z21ToffoliCall().QBB.14.v.stub", i32 9)
; CHECK-NEXT:    br label [[AQCC_MEAS_MOVE_END:%.*]]
; CHECK:       aqcc.meas.move.end:
; CHECK-NEXT:    store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
; CHECK-NEXT:    ret void
;
entry:
  br label %aqcc.quantum

aqcc.quantum:                                     ; preds = %entry
  %QRTcall = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z21ToffoliCall().QBB.14.v.stub", i32 9)
  br label %aqcc.meas.move.end

aqcc.meas.move.end:                               ; preds = %aqcc.quantum
  store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z9PrepXCallv.stub() local_unnamed_addr #1 {
; CHECK-LABEL: define dso_local void @_Z9PrepXCallv.stub
; CHECK-SAME: () local_unnamed_addr #[[ATTR1]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br label [[AQCC_QUANTUM:%.*]]
; CHECK:       aqcc.quantum:
; CHECK-NEXT:    [[QRTCALL:%.*]] = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z19PrepXCall().QBB.15.v.stub", i32 3)
; CHECK-NEXT:    br label [[AQCC_MEAS_MOVE_END:%.*]]
; CHECK:       aqcc.meas.move.end:
; CHECK-NEXT:    store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
; CHECK-NEXT:    ret void
;
entry:
  br label %aqcc.quantum

aqcc.quantum:                                     ; preds = %entry
  %QRTcall = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z19PrepXCall().QBB.15.v.stub", i32 3)
  br label %aqcc.meas.move.end

aqcc.meas.move.end:                               ; preds = %aqcc.quantum
  store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z9PrepYCallv.stub() local_unnamed_addr #1 {
; CHECK-LABEL: define dso_local void @_Z9PrepYCallv.stub
; CHECK-SAME: () local_unnamed_addr #[[ATTR1]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br label [[AQCC_QUANTUM:%.*]]
; CHECK:       aqcc.quantum:
; CHECK-NEXT:    [[QRTCALL:%.*]] = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z19PrepYCall().QBB.16.v.stub", i32 3)
; CHECK-NEXT:    br label [[AQCC_MEAS_MOVE_END:%.*]]
; CHECK:       aqcc.meas.move.end:
; CHECK-NEXT:    store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
; CHECK-NEXT:    ret void
;
entry:
  br label %aqcc.quantum

aqcc.quantum:                                     ; preds = %entry
  %QRTcall = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z19PrepYCall().QBB.16.v.stub", i32 3)
  br label %aqcc.meas.move.end

aqcc.meas.move.end:                               ; preds = %aqcc.quantum
  store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z9PrepZCallv.stub() local_unnamed_addr #1 {
; CHECK-LABEL: define dso_local void @_Z9PrepZCallv.stub
; CHECK-SAME: () local_unnamed_addr #[[ATTR1]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br label [[AQCC_QUANTUM:%.*]]
; CHECK:       aqcc.quantum:
; CHECK-NEXT:    [[QRTCALL:%.*]] = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z19PrepZCall().QBB.17.v.stub", i32 1)
; CHECK-NEXT:    br label [[AQCC_MEAS_MOVE_END:%.*]]
; CHECK:       aqcc.meas.move.end:
; CHECK-NEXT:    store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
; CHECK-NEXT:    ret void
;
entry:
  br label %aqcc.quantum

aqcc.quantum:                                     ; preds = %entry
  %QRTcall = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z19PrepZCall().QBB.17.v.stub", i32 1)
  br label %aqcc.meas.move.end

aqcc.meas.move.end:                               ; preds = %aqcc.quantum
  store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z9MeasXCallRb.stub(ptr noundef nonnull align 1 dereferenceable(1) "cbit_ref" %carg) local_unnamed_addr #1 {
; CHECK-LABEL: define dso_local void @_Z9MeasXCallRb.stub
; CHECK-SAME: (ptr noundef nonnull align 1 dereferenceable(1) "cbit_ref" [[CARG:%.*]]) local_unnamed_addr #[[ATTR1]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br label [[AQCC_QUANTUM:%.*]]
; CHECK:       aqcc.quantum:
; CHECK-NEXT:    [[QRTCALL:%.*]] = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @_Z21_Z9MeasXCallR.QBB.18.v.stub, i32 6)
; CHECK-NEXT:    br label [[AQCC_MEAS_MOVE_END:%.*]]
; CHECK:       aqcc.meas.move.end:
; CHECK-NEXT:    [[QRTCAST1:%.*]] = bitcast ptr @c to ptr
; CHECK-NEXT:    call void @_ZN4qrt020updateMeasurementMapEPbmb(ptr [[QRTCAST1]], i64 1, i1 false)
; CHECK-NEXT:    [[QRTCAST:%.*]] = bitcast ptr [[CARG]] to ptr
; CHECK-NEXT:    call void @_ZN4qrt020updateMeasurementMapEPbmb(ptr [[QRTCAST]], i64 0, i1 false)
; CHECK-NEXT:    store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
; CHECK-NEXT:    ret void
;
entry:
  br label %aqcc.quantum

aqcc.quantum:                                     ; preds = %entry
  %QRTcall = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @_Z21_Z9MeasXCallR.QBB.18.v.stub, i32 6)
  br label %aqcc.meas.move.end

aqcc.meas.move.end:                               ; preds = %aqcc.quantum
  %QRTcast1 = bitcast ptr @c to ptr
  call void @_ZN4qrt020updateMeasurementMapEPbmb(ptr %QRTcast1, i64 1, i1 false)
  %QRTcast = bitcast ptr %carg to ptr
  call void @_ZN4qrt020updateMeasurementMapEPbmb(ptr %QRTcast, i64 0, i1 false)
  store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z9MeasYCallRb.stub(ptr noundef nonnull align 1 dereferenceable(1) "cbit_ref" %carg) local_unnamed_addr #1 {
; CHECK-LABEL: define dso_local void @_Z9MeasYCallRb.stub
; CHECK-SAME: (ptr noundef nonnull align 1 dereferenceable(1) "cbit_ref" [[CARG:%.*]]) local_unnamed_addr #[[ATTR1]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br label [[AQCC_QUANTUM:%.*]]
; CHECK:       aqcc.quantum:
; CHECK-NEXT:    [[QRTCALL:%.*]] = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @_Z21_Z9MeasYCallR.QBB.19.v.stub, i32 6)
; CHECK-NEXT:    br label [[AQCC_MEAS_MOVE_END:%.*]]
; CHECK:       aqcc.meas.move.end:
; CHECK-NEXT:    [[QRTCAST1:%.*]] = bitcast ptr @c to ptr
; CHECK-NEXT:    call void @_ZN4qrt020updateMeasurementMapEPbmb(ptr [[QRTCAST1]], i64 1, i1 false)
; CHECK-NEXT:    [[QRTCAST:%.*]] = bitcast ptr [[CARG]] to ptr
; CHECK-NEXT:    call void @_ZN4qrt020updateMeasurementMapEPbmb(ptr [[QRTCAST]], i64 0, i1 false)
; CHECK-NEXT:    store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
; CHECK-NEXT:    ret void
;
entry:
  br label %aqcc.quantum

aqcc.quantum:                                     ; preds = %entry
  %QRTcall = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @_Z21_Z9MeasYCallR.QBB.19.v.stub, i32 6)
  br label %aqcc.meas.move.end

aqcc.meas.move.end:                               ; preds = %aqcc.quantum
  %QRTcast1 = bitcast ptr @c to ptr
  call void @_ZN4qrt020updateMeasurementMapEPbmb(ptr %QRTcast1, i64 1, i1 false)
  %QRTcast = bitcast ptr %carg to ptr
  call void @_ZN4qrt020updateMeasurementMapEPbmb(ptr %QRTcast, i64 0, i1 false)
  store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z9MeasZCallRb.stub(ptr noundef nonnull align 1 dereferenceable(1) "cbit_ref" %carg) local_unnamed_addr #1 {
; CHECK-LABEL: define dso_local void @_Z9MeasZCallRb.stub
; CHECK-SAME: (ptr noundef nonnull align 1 dereferenceable(1) "cbit_ref" [[CARG:%.*]]) local_unnamed_addr #[[ATTR1]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br label [[AQCC_QUANTUM:%.*]]
; CHECK:       aqcc.quantum:
; CHECK-NEXT:    [[QRTCALL:%.*]] = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @_Z21_Z9MeasZCallR.QBB.20.v.stub, i32 2)
; CHECK-NEXT:    br label [[AQCC_MEAS_MOVE_END:%.*]]
; CHECK:       aqcc.meas.move.end:
; CHECK-NEXT:    [[QRTCAST1:%.*]] = bitcast ptr @c to ptr
; CHECK-NEXT:    call void @_ZN4qrt020updateMeasurementMapEPbmb(ptr [[QRTCAST1]], i64 1, i1 false)
; CHECK-NEXT:    [[QRTCAST:%.*]] = bitcast ptr [[CARG]] to ptr
; CHECK-NEXT:    call void @_ZN4qrt020updateMeasurementMapEPbmb(ptr [[QRTCAST]], i64 0, i1 false)
; CHECK-NEXT:    store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
; CHECK-NEXT:    ret void
;
entry:
  br label %aqcc.quantum

aqcc.quantum:                                     ; preds = %entry
  %QRTcall = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @_Z21_Z9MeasZCallR.QBB.20.v.stub, i32 2)
  br label %aqcc.meas.move.end

aqcc.meas.move.end:                               ; preds = %aqcc.quantum
  %QRTcast1 = bitcast ptr @c to ptr
  call void @_ZN4qrt020updateMeasurementMapEPbmb(ptr %QRTcast1, i64 1, i1 false)
  %QRTcast = bitcast ptr %carg to ptr
  call void @_ZN4qrt020updateMeasurementMapEPbmb(ptr %QRTcast, i64 0, i1 false)
  store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z10CPhaseCalld.stub(double noundef %arg) local_unnamed_addr #1 {
; CHECK-LABEL: define dso_local void @_Z10CPhaseCalld.stub
; CHECK-SAME: (double noundef [[ARG:%.*]]) local_unnamed_addr #[[ATTR1]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    store double [[ARG]], ptr getelementptr inbounds ([65536 x double], ptr @aqcc.qsda, i64 0, i64 4), align 8
; CHECK-NEXT:    br label [[AQCC_QUANTUM:%.*]]
; CHECK:       aqcc.quantum:
; CHECK-NEXT:    [[QRTCALL:%.*]] = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z26CPhaseCall(double).QBB.21.v.stub", i32 2)
; CHECK-NEXT:    br label [[AQCC_MEAS_MOVE_END:%.*]]
; CHECK:       aqcc.meas.move.end:
; CHECK-NEXT:    store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
; CHECK-NEXT:    ret void
;
entry:
  store double %arg, ptr getelementptr inbounds ([65536 x double], ptr @aqcc.qsda, i64 0, i64 4), align 8
  br label %aqcc.quantum

aqcc.quantum:                                     ; preds = %entry
  %QRTcall = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z26CPhaseCall(double).QBB.21.v.stub", i32 2)
  br label %aqcc.meas.move.end

aqcc.meas.move.end:                               ; preds = %aqcc.quantum
  store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z7RXYCalldd.stub(double noundef %arg1, double noundef %arg2) local_unnamed_addr #1 {
; CHECK-LABEL: define dso_local void @_Z7RXYCalldd.stub
; CHECK-SAME: (double noundef [[ARG1:%.*]], double noundef [[ARG2:%.*]]) local_unnamed_addr #[[ATTR1]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    store double [[ARG1]], ptr getelementptr inbounds ([65536 x double], ptr @aqcc.qsda, i64 0, i64 4), align 8
; CHECK-NEXT:    store double [[ARG2]], ptr getelementptr inbounds ([65536 x double], ptr @aqcc.qsda, i64 0, i64 5), align 8
; CHECK-NEXT:    store double [[ARG1]], ptr getelementptr inbounds ([65536 x double], ptr @aqcc.qsda, i64 0, i64 6), align 8
; CHECK-NEXT:    store double 4.000000e-01, ptr getelementptr inbounds ([65536 x double], ptr @aqcc.qsda, i64 0, i64 7), align 8
; CHECK-NEXT:    store double 5.000000e-01, ptr getelementptr inbounds ([65536 x double], ptr @aqcc.qsda, i64 0, i64 8), align 8
; CHECK-NEXT:    store double [[ARG2]], ptr getelementptr inbounds ([65536 x double], ptr @aqcc.qsda, i64 0, i64 9), align 8
; CHECK-NEXT:    br label [[AQCC_QUANTUM:%.*]]
; CHECK:       aqcc.quantum:
; CHECK-NEXT:    [[QRTCALL:%.*]] = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z31RXYCall(double, double).QBB.22.v.stub", i32 4)
; CHECK-NEXT:    br label [[AQCC_MEAS_MOVE_END:%.*]]
; CHECK:       aqcc.meas.move.end:
; CHECK-NEXT:    store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
; CHECK-NEXT:    ret void
;
entry:
  store double %arg1, ptr getelementptr inbounds ([65536 x double], ptr @aqcc.qsda, i64 0, i64 4), align 8
  store double %arg2, ptr getelementptr inbounds ([65536 x double], ptr @aqcc.qsda, i64 0, i64 5), align 8
  store double %arg1, ptr getelementptr inbounds ([65536 x double], ptr @aqcc.qsda, i64 0, i64 6), align 8
  store double 4.000000e-01, ptr getelementptr inbounds ([65536 x double], ptr @aqcc.qsda, i64 0, i64 7), align 8
  store double 5.000000e-01, ptr getelementptr inbounds ([65536 x double], ptr @aqcc.qsda, i64 0, i64 8), align 8
  store double %arg2, ptr getelementptr inbounds ([65536 x double], ptr @aqcc.qsda, i64 0, i64 9), align 8
  br label %aqcc.quantum

aqcc.quantum:                                     ; preds = %entry
  %QRTcall = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z31RXYCall(double, double).QBB.22.v.stub", i32 4)
  br label %aqcc.meas.move.end

aqcc.meas.move.end:                               ; preds = %aqcc.quantum
  store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z9SwapACalld.stub(double noundef %arg) local_unnamed_addr #1 {
; CHECK-LABEL: define dso_local void @_Z9SwapACalld.stub
; CHECK-SAME: (double noundef [[ARG:%.*]]) local_unnamed_addr #[[ATTR1]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    store double [[ARG]], ptr getelementptr inbounds ([65536 x double], ptr @aqcc.qsda, i64 0, i64 4), align 8
; CHECK-NEXT:    br label [[AQCC_QUANTUM:%.*]]
; CHECK:       aqcc.quantum:
; CHECK-NEXT:    [[QRTCALL:%.*]] = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z25SwapACall(double).QBB.23.v.stub", i32 2)
; CHECK-NEXT:    br label [[AQCC_MEAS_MOVE_END:%.*]]
; CHECK:       aqcc.meas.move.end:
; CHECK-NEXT:    store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
; CHECK-NEXT:    ret void
;
entry:
  store double %arg, ptr getelementptr inbounds ([65536 x double], ptr @aqcc.qsda, i64 0, i64 4), align 8
  br label %aqcc.quantum

aqcc.quantum:                                     ; preds = %entry
  %QRTcall = call i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr @"_Z25SwapACall(double).QBB.23.v.stub", i32 2)
  br label %aqcc.meas.move.end

aqcc.meas.move.end:                               ; preds = %aqcc.quantum
  store [3 x i16] [i16 0, i16 1, i16 2], ptr @q, align 2
  ret void
}

; Function Attrs: mustprogress norecurse nounwind uwtable
define dso_local noundef i32 @main() local_unnamed_addr #2 {
; CHECK-LABEL: define dso_local noundef i32 @main
; CHECK-SAME: () local_unnamed_addr #[[ATTR2:[0-9]+]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[CLOC:%.*]] = alloca i8, align 1
; CHECK-NEXT:    tail call void @_Z5HCallv.stub() #[[ATTR4:[0-9]+]]
; CHECK-NEXT:    tail call void @_Z5XCallv.stub() #[[ATTR4]]
; CHECK-NEXT:    tail call void @_Z5YCallv.stub() #[[ATTR4]]
; CHECK-NEXT:    tail call void @_Z5SCallv.stub() #[[ATTR4]]
; CHECK-NEXT:    tail call void @_Z8SdagCallv.stub() #[[ATTR4]]
; CHECK-NEXT:    tail call void @_Z5TCallv.stub() #[[ATTR4]]
; CHECK-NEXT:    tail call void @_Z8TdagCallv.stub() #[[ATTR4]]
; CHECK-NEXT:    tail call void @_Z6RXCalld.stub(double noundef nofpclass(nan inf zero sub nnorm) 1.100000e+00) #[[ATTR4]]
; CHECK-NEXT:    tail call void @_Z6RYCalld.stub(double noundef nofpclass(nan inf zero sub nnorm) 1.200000e+00) #[[ATTR4]]
; CHECK-NEXT:    tail call void @_Z6RZCalld.stub(double noundef nofpclass(nan inf zero sub nnorm) 1.300000e+00) #[[ATTR4]]
; CHECK-NEXT:    tail call void @_Z6CZCallv.stub() #[[ATTR4]]
; CHECK-NEXT:    tail call void @_Z8CNOTCallv.stub() #[[ATTR4]]
; CHECK-NEXT:    tail call void @_Z11ToffoliCallv.stub() #[[ATTR4]]
; CHECK-NEXT:    tail call void @_Z9PrepXCallv.stub() #[[ATTR4]]
; CHECK-NEXT:    tail call void @_Z9PrepYCallv.stub() #[[ATTR4]]
; CHECK-NEXT:    tail call void @_Z9PrepZCallv.stub() #[[ATTR4]]
; CHECK-NEXT:    call void @llvm.lifetime.start.p0(i64 noundef 1, ptr noundef nonnull dereferenceable(1) [[CLOC]]) #[[ATTR4]]
; CHECK-NEXT:    call void @_Z9MeasXCallRb.stub(ptr noundef nonnull align 1 dereferenceable(1) [[CLOC]]) #[[ATTR4]]
; CHECK-NEXT:    call void @_Z9MeasYCallRb.stub(ptr noundef nonnull align 1 dereferenceable(1) [[CLOC]]) #[[ATTR4]]
; CHECK-NEXT:    call void @_Z9MeasZCallRb.stub(ptr noundef nonnull align 1 dereferenceable(1) [[CLOC]]) #[[ATTR4]]
; CHECK-NEXT:    call void @llvm.lifetime.end.p0(i64 noundef 1, ptr noundef nonnull [[CLOC]]) #[[ATTR4]]
; CHECK-NEXT:    ret i32 0
;
entry:
  %cloc = alloca i8, align 1
  tail call void @_Z5HCallv.stub() #4
  tail call void @_Z5XCallv.stub() #4
  tail call void @_Z5YCallv.stub() #4
  tail call void @_Z5SCallv.stub() #4
  tail call void @_Z8SdagCallv.stub() #4
  tail call void @_Z5TCallv.stub() #4
  tail call void @_Z8TdagCallv.stub() #4
  tail call void @_Z6RXCalld.stub(double noundef nofpclass(nan inf zero sub nnorm) 1.100000e+00) #4
  tail call void @_Z6RYCalld.stub(double noundef nofpclass(nan inf zero sub nnorm) 1.200000e+00) #4
  tail call void @_Z6RZCalld.stub(double noundef nofpclass(nan inf zero sub nnorm) 1.300000e+00) #4
  tail call void @_Z6CZCallv.stub() #4
  tail call void @_Z8CNOTCallv.stub() #4
  tail call void @_Z11ToffoliCallv.stub() #4
  tail call void @_Z9PrepXCallv.stub() #4
  tail call void @_Z9PrepYCallv.stub() #4
  tail call void @_Z9PrepZCallv.stub() #4
  call void @llvm.lifetime.start.p0(i64 noundef 1, ptr noundef nonnull dereferenceable(1) %cloc) #4
  call void @_Z9MeasXCallRb.stub(ptr noundef nonnull align 1 dereferenceable(1) %cloc) #4
  call void @_Z9MeasYCallRb.stub(ptr noundef nonnull align 1 dereferenceable(1) %cloc) #4
  call void @_Z9MeasZCallRb.stub(ptr noundef nonnull align 1 dereferenceable(1) %cloc) #4
  call void @llvm.lifetime.end.p0(i64 noundef 1, ptr noundef nonnull %cloc) #4
  ret i32 0
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

declare i32 @_ZN4qrt021initializeQrtSystem64EPdPcS1_(ptr, ptr, ptr)

declare i1 @_ZN4qrt013isInitializedEv()

declare void @_ZN4qrt020updateMeasurementMapEPbmb(ptr, i64, i1)

declare i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr, i32)

declare i32 @_ZN4qrt018dismantleQrtSystemEv()

; Function Attrs: nounwind
declare void @llvm.quantum.rotz(i16, double, i32 immarg) #4

; Function Attrs: nounwind
declare void @llvm.quantum.rotxy(i16, double, double, i32 immarg) #4

; Function Attrs: nounwind
declare void @llvm.quantum.cphase(i16, i16, double, i32 immarg) #4

; Function Attrs: nounwind
declare void @llvm.quantum.swapalp(i16, i16, double, i32 immarg) #4

; Function Attrs: nounwind
declare void @llvm.quantum.measz(i16, ptr, i1, i32 immarg) #4

; Function Attrs: nounwind
declare void @llvm.quantum.prepz(i16, i32 immarg) #4

; Function Attrs: nounwind
declare void @llvm.quantum.rotz.imm(i16 immarg, double immarg, i32 immarg) #4

; Function Attrs: nounwind
declare void @llvm.quantum.rotxy.imm(i16 immarg, double immarg, double immarg, i32 immarg) #4

; Function Attrs: nounwind
declare void @llvm.quantum.cphase.imm(i16 immarg, i16 immarg, double immarg, i32 immarg) #4

; Function Attrs: nounwind
declare void @llvm.quantum.swapalp.imm(i16 immarg, i16 immarg, double immarg, i32 immarg) #4

; Function Attrs: nounwind
declare void @llvm.quantum.measz.imm(i16 immarg, i32 immarg) #4

; Function Attrs: nounwind
declare void @llvm.quantum.prepz.imm(i16 immarg, i32 immarg) #4

; Function Attrs: nounwind
declare void @llvm.quantum.rotz.imm.index(i16 immarg, i32 immarg, i32 immarg) #4

; Function Attrs: nounwind
declare void @llvm.quantum.rotxy.imm.index(i16 immarg, i32 immarg, i32 immarg, i32 immarg) #4

; Function Attrs: nounwind
declare void @llvm.quantum.cphase.imm.index(i16 immarg, i16 immarg, i32 immarg, i32 immarg) #4

; Function Attrs: nounwind
declare void @llvm.quantum.swapalp.imm.index(i16 immarg, i16 immarg, i32 immarg, i32 immarg) #4

; Function Attrs: nounwind
declare void @llvm.quantum.measz.imm.index(i16 immarg, i32 immarg, i32 immarg) #4

define void @"_Z14HCall().QBB.0.v.stub"() section ".qbbs_text" {
aqcc.quantum:
  call void @llvm.quantum.rotxy.imm(i16 0, double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 1)
  call void @llvm.quantum.rotxy.imm(i16 0, double 0x400921FB54442D18, double 0.000000e+00, i32 2)
  ret void
}

define void @"_Z14XCall().QBB.1.v.stub"() section ".qbbs_text" {
aqcc.quantum:
  call void @llvm.quantum.rotxy.imm(i16 0, double 0x400921FB54442D18, double 0.000000e+00, i32 1)
  ret void
}

define void @"_Z14YCall().QBB.2.v.stub"() section ".qbbs_text" {
aqcc.quantum:
  call void @llvm.quantum.rotxy.imm(i16 0, double 0x400921FB54442D18, double 0x3FF921FB54442D18, i32 1)
  ret void
}

define void @"_Z14ZCall().QBB.3.v.stub"() section ".qbbs_text" {
aqcc.quantum:
  call void @llvm.quantum.rotxy.imm(i16 0, double 0x400921FB54442D18, double 0.000000e+00, i32 1)
  call void @llvm.quantum.rotxy.imm(i16 0, double 0x400921FB54442D18, double 0x3FF921FB54442D18, i32 2)
  ret void
}

define void @"_Z14SCall().QBB.4.v.stub"() section ".qbbs_text" {
aqcc.quantum:
  call void @llvm.quantum.rotxy.imm(i16 0, double 0x400921FB54442D18, double 0.000000e+00, i32 1)
  call void @llvm.quantum.rotxy.imm(i16 0, double 0x400921FB54442D18, double 0x3FE921FB54442D18, i32 2)
  ret void
}

define void @"_Z17SdagCall().QBB.5.v.stub"() section ".qbbs_text" {
aqcc.quantum:
  call void @llvm.quantum.rotxy.imm(i16 0, double 0x400921FB54442D18, double 0.000000e+00, i32 1)
  call void @llvm.quantum.rotxy.imm(i16 0, double 0x400921FB54442D18, double 0x4002D97C7F3321D2, i32 2)
  ret void
}

define void @"_Z14TCall().QBB.6.v.stub"() section ".qbbs_text" {
aqcc.quantum:
  call void @llvm.quantum.rotxy.imm(i16 0, double 0x400921FB54442D18, double 0.000000e+00, i32 1)
  call void @llvm.quantum.rotxy.imm(i16 0, double 0x400921FB54442D18, double 0x3FD921FB54442D18, i32 2)
  ret void
}

define void @"_Z17TdagCall().QBB.7.v.stub"() section ".qbbs_text" {
aqcc.quantum:
  call void @llvm.quantum.rotxy.imm(i16 0, double 0x400921FB54442D18, double 0.000000e+00, i32 1)
  call void @llvm.quantum.rotxy.imm(i16 0, double 0x400921FB54442D18, double 0x4005FDBBE9BBA775, i32 2)
  ret void
}

define void @"_Z21RXCall(double).QBB.8.v.stub"() section ".qbbs_text" {
aqcc.quantum:
  call void @llvm.quantum.rotxy.imm(i16 0, double 1.000000e-01, double 0.000000e+00, i32 1)
  call void @llvm.quantum.rotxy.imm.index(i16 0, i32 4, i32 0, i32 2)
  ret void
}

define void @"_Z21RYCall(double).QBB.9.v.stub"() section ".qbbs_text" {
aqcc.quantum:
  call void @llvm.quantum.rotxy.imm(i16 0, double 2.000000e-01, double 0x3FF921FB54442D18, i32 1)
  call void @llvm.quantum.rotxy.imm.index(i16 0, i32 4, i32 1, i32 2)
  ret void
}

define void @"_Z22RZCall(double).QBB.10.v.stub"() section ".qbbs_text" {
aqcc.quantum:
  call void @llvm.quantum.rotxy.imm(i16 0, double 0x400921FB54442D18, double 0.000000e+00, i32 1)
  call void @llvm.quantum.rotxy.imm(i16 0, double 0x400921FB54442D18, double 1.500000e-01, i32 0)
  call void @llvm.quantum.rotxy.imm(i16 0, double 0x400921FB54442D18, double 0.000000e+00, i32 0)
  call void @llvm.quantum.rotxy.imm.index(i16 0, i32 2, i32 4, i32 2)
  ret void
}

define void @"_Z16CZCall().QBB.11.v.stub"() section ".qbbs_text" {
aqcc.quantum:
  call void @llvm.quantum.cphase.imm(i16 0, i16 1, double 0x400921FB54442D18, i32 1)
  ret void
}

define void @"_Z18CNOTCall().QBB.12.v.stub"() section ".qbbs_text" {
aqcc.quantum:
  call void @llvm.quantum.rotxy.imm(i16 1, double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 1)
  call void @llvm.quantum.cphase.imm(i16 0, i16 1, double 0x400921FB54442D18, i32 0)
  call void @llvm.quantum.rotxy.imm(i16 1, double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 2)
  ret void
}

define void @"_Z18SWAPCall().QBB.13.v.stub"() section ".qbbs_text" {
aqcc.quantum:
  call void @llvm.quantum.swapalp.imm(i16 0, i16 1, double 0x400921FB54442D18, i32 1)
  ret void
}

define void @"_Z21ToffoliCall().QBB.14.v.stub"() section ".qbbs_text" {
aqcc.quantum:
  call void @llvm.quantum.rotxy.imm(i16 2, double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 1)
  call void @llvm.quantum.cphase.imm(i16 0, i16 1, double 0x3FF921FB54442D18, i32 0)
  call void @llvm.quantum.cphase.imm(i16 1, i16 2, double 0x3FF921FB54442D18, i32 0)
  call void @llvm.quantum.rotxy.imm(i16 2, double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
  call void @llvm.quantum.cphase.imm(i16 0, i16 2, double 0x400921FB54442D18, i32 0)
  call void @llvm.quantum.rotxy.imm(i16 2, double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 0)
  call void @llvm.quantum.cphase.imm(i16 1, i16 2, double 0x4012D97C7F3321D2, i32 0)
  call void @llvm.quantum.rotxy.imm(i16 2, double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
  call void @llvm.quantum.cphase.imm(i16 0, i16 2, double 0x400921FB54442D18, i32 2)
  ret void
}

define void @"_Z19PrepXCall().QBB.15.v.stub"() section ".qbbs_text" {
aqcc.quantum:
  call void @llvm.quantum.rotxy.imm(i16 0, double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 1)
  call void @llvm.quantum.prepz.imm(i16 0, i32 0)
  call void @llvm.quantum.rotxy.imm(i16 0, double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 2)
  ret void
}

define void @"_Z19PrepYCall().QBB.16.v.stub"() section ".qbbs_text" {
aqcc.quantum:
  call void @llvm.quantum.rotxy.imm(i16 0, double 0x3FF921FB54442D18, double 0.000000e+00, i32 1)
  call void @llvm.quantum.prepz.imm(i16 0, i32 0)
  call void @llvm.quantum.rotxy.imm(i16 0, double 0x3FF921FB54442D18, double 0x400921FB54442D18, i32 2)
  ret void
}

define void @"_Z19PrepZCall().QBB.17.v.stub"() section ".qbbs_text" {
aqcc.quantum:
  call void @llvm.quantum.prepz.imm(i16 0, i32 1)
  ret void
}

define void @_Z21_Z9MeasXCallR.QBB.18.v.stub() section ".qbbs_text" {
aqcc.quantum:
  call void @llvm.quantum.rotxy.imm(i16 0, double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 1)
  call void @llvm.quantum.measz.imm.index(i16 0, i32 0, i32 0)
  call void @llvm.quantum.rotxy.imm(i16 0, double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
  call void @llvm.quantum.rotxy.imm(i16 1, double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 0)
  call void @llvm.quantum.measz.imm.index(i16 1, i32 1, i32 0)
  call void @llvm.quantum.rotxy.imm(i16 1, double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 2)
  ret void
}

define void @_Z21_Z9MeasYCallR.QBB.19.v.stub() section ".qbbs_text" {
aqcc.quantum:
  call void @llvm.quantum.rotxy.imm(i16 0, double 0x3FF921FB54442D18, double 0.000000e+00, i32 1)
  call void @llvm.quantum.measz.imm.index(i16 0, i32 0, i32 0)
  call void @llvm.quantum.rotxy.imm(i16 0, double 0x3FF921FB54442D18, double 0x400921FB54442D18, i32 0)
  call void @llvm.quantum.rotxy.imm(i16 1, double 0x3FF921FB54442D18, double 0.000000e+00, i32 0)
  call void @llvm.quantum.measz.imm.index(i16 1, i32 1, i32 0)
  call void @llvm.quantum.rotxy.imm(i16 1, double 0x3FF921FB54442D18, double 0x400921FB54442D18, i32 2)
  ret void
}

define void @_Z21_Z9MeasZCallR.QBB.20.v.stub() section ".qbbs_text" {
aqcc.quantum:
  call void @llvm.quantum.measz.imm.index(i16 0, i32 0, i32 1)
  call void @llvm.quantum.measz.imm.index(i16 1, i32 1, i32 2)
  ret void
}

define void @"_Z26CPhaseCall(double).QBB.21.v.stub"() section ".qbbs_text" {
aqcc.quantum:
  call void @llvm.quantum.cphase.imm.index(i16 0, i16 1, i32 4, i32 1)
  call void @llvm.quantum.cphase.imm(i16 0, i16 1, double 3.000000e-01, i32 2)
  ret void
}

define void @"_Z31RXYCall(double, double).QBB.22.v.stub"() section ".qbbs_text" {
aqcc.quantum:
  call void @llvm.quantum.rotxy.imm.index(i16 0, i32 4, i32 5, i32 1)
  call void @llvm.quantum.rotxy.imm.index(i16 0, i32 6, i32 7, i32 0)
  call void @llvm.quantum.rotxy.imm.index(i16 0, i32 8, i32 9, i32 0)
  call void @llvm.quantum.rotxy.imm(i16 0, double 6.000000e-01, double 0x3FE6666666666666, i32 2)
  ret void
}

define void @"_Z25SwapACall(double).QBB.23.v.stub"() section ".qbbs_text" {
aqcc.quantum:
  call void @llvm.quantum.swapalp.imm.index(i16 0, i16 1, i32 4, i32 1)
  call void @llvm.quantum.swapalp.imm(i16 0, i16 1, double 3.000000e-01, i32 2)
  ret void
}

attributes #0 = { "quantum_shared_var" }
attributes #1 = { mustprogress noinline nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { mustprogress norecurse nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
