; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 2
; RUN: opt -S %loadintelquantumpasses -p=q-annotations-to-json,spin-native-annotate,spin-lower-from-canonical %s -o - | FileCheck %s --dump-input fail
; ModuleID = 'test.ll'
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [325 x i8] c"{     \22matrix_real\22 : \221/sqrt(2)*[1, 1, 1, -1]\22,     \22matrix_imag\22 : [0, 0, 0, 0],     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : true,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [4],     \22identifier\22 : 3   }\00", section "llvm.metadata"
@.str.1 = private unnamed_addr constant [37 x i8] c"include/clang/Quantum/quintrinsics.h\00", section "llvm.metadata"
@.str.2 = private unnamed_addr constant [313 x i8] c"{     \22matrix_real\22 : [0, 1, 1, 0],     \22matrix_imag\22 : [0, 0, 0, 0],     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : true,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [1],     \22identifier\22 : 12   }\00", section "llvm.metadata"
@.str.3 = private unnamed_addr constant [314 x i8] c"{     \22matrix_real\22 : [0, 0, 0, 0],     \22matrix_imag\22 : [0, -1, 1, 0],     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : true,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [2],     \22identifier\22 : 18   }\00", section "llvm.metadata"
@.str.4 = private unnamed_addr constant [313 x i8] c"{     \22matrix_real\22 : [1, 0, 0, -1],     \22matrix_imag\22 : [0, 0, 0, 0],     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : true,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [3],     \22identifier\22 : 6   }\00", section "llvm.metadata"
@.str.5 = private unnamed_addr constant [313 x i8] c"{     \22matrix_real\22 : [1, 0, 0, 0],     \22matrix_imag\22 : [0, 0, 0, 1],     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [3],     \22identifier\22 : 5   }\00", section "llvm.metadata"
@.str.6 = private unnamed_addr constant [315 x i8] c"{     \22matrix_real\22 : [1, 0, 0, 0],     \22matrix_imag\22 : [0, 0, 0, -1],     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [3],     \22identifier\22 : 11   }\00", section "llvm.metadata"
@.str.7 = private unnamed_addr constant [334 x i8] c"{     \22matrix_real\22 : \22[1, 0, 0, cos(pi/4)]\22,     \22matrix_imag\22 : \22[0, 0, 0, sin(pi/4)]\22,     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [3],     \22identifier\22 : 24   }\00", section "llvm.metadata"
@.str.8 = private unnamed_addr constant [335 x i8] c"{     \22matrix_real\22 : \22[1, 0, 0, cos(pi/4)]\22,     \22matrix_imag\22 : \22[0, 0, 0, -sin(pi/4)]\22,     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [3],     \22identifier\22 : 25   }\00", section "llvm.metadata"
@.str.9 = private unnamed_addr constant [364 x i8] c"{     \22matrix_real\22 : \22[cos(angle/2), 0, 0, cos(angle/2)]\22,     \22matrix_imag\22 : \22[0, -sin(angle/2), sin(angle/2), 0]\22,     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [1],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [1],     \22identifier\22 : 26   }\00", section "llvm.metadata"
@.str.10 = private unnamed_addr constant [362 x i8] c"{     \22matrix_real\22 : \22[cos(angle/2), -sin(angle/2), sin(angle/2), cos(angle/2)]\22,     \22matrix_imag\22 : [0, 0, 0, 0],     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [1],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [2],     \22identifier\22 : 27   }\00", section "llvm.metadata"
@.str.11 = private unnamed_addr constant [364 x i8] c"{     \22matrix_real\22 : \22[cos(angle/2), 0, 0, cos(angle/2)]\22,     \22matrix_imag\22 : \22[-sin(angle/2), 0, 0, sin(angle/2)]\22,     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [1],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [3],     \22identifier\22 : 28   }\00", section "llvm.metadata"
@.str.12 = private unnamed_addr constant [396 x i8] c"{     \22matrix_real\22 : [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, -1],     \22matrix_imag\22 : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : true,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0, 1],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [0, 1],     \22local_basis_list\22 : [3, 3],     \22identifier\22 : 37   }\00", section "llvm.metadata"
@.str.13 = private unnamed_addr constant [392 x i8] c"{     \22matrix_real\22 : [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0],     \22matrix_imag\22 : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : true,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0, 1],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [0],     \22local_basis_list\22 : [3, 1],     \22identifier\22 : 35   }\00", section "llvm.metadata"
@.str.14 = private unnamed_addr constant [391 x i8] c"{     \22matrix_real\22 : [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1],     \22matrix_imag\22 : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : true,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0, 1],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [0, 0],     \22identifier\22 : 38   }\00", section "llvm.metadata"
@.str.15 = private unnamed_addr constant [689 x i8] c"{     \22matrix_real\22 : [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0],     \22matrix_imag\22 : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : true,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0, 1, 2],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [0, 1],     \22local_basis_list\22 : [3, 3, 1],     \22identifier\22 : 39   }\00", section "llvm.metadata"
@.str.16 = private unnamed_addr constant [417 x i8] c"{     \22matrix_real\22 : \22{qt(prob0) : [0.5, 0.5, 0.5, 0.5], qt(prob1) : [0.5, -0.5, 0.5, -0.5]}\22,     \22matrix_imag\22 : \22{qt(prob0) : [0, 0, 0, 0], qt(prob1) : [0, 0, 0, 0]}\22,     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : false,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [1],     \22identifier\22 : 40   }\00", section "llvm.metadata"
@.str.17 = private unnamed_addr constant [417 x i8] c"{     \22matrix_real\22 : \22{qt(prob0) : [0.5, 0, 0, 0.5], qt(prob1) : [0.5, 0, 0, -0.5]}\22,     \22matrix_imag\22 : \22{qt(prob0) : [0, 0.5, -0.5, 0], qt(prob1) : [0, 0.5, 0.5, 0]}\22,     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : false,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [2],     \22identifier\22 : 41   }\00", section "llvm.metadata"
@.str.18 = private unnamed_addr constant [399 x i8] c"{     \22matrix_real\22 : \22{qt(prob0) : [1, 0, 0, 0], qt(prob1) : [0, 1, 0, 0]}\22,     \22matrix_imag\22 : \22{qt(prob0) : [0, 0, 0, 0], qt(prob1) : [0, 0, 0, 0]}\22,     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : false,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [3],     \22identifier\22 : 42   }\00", section "llvm.metadata"
@.str.19 = private unnamed_addr constant [421 x i8] c"{     \22matrix_real\22 : \22{qt(prob0) : [0.5, 0.5, 0.5, 0.5], qt(prob1) : [0.5, -0.5, -0.5, 0.5]}\22,     \22matrix_imag\22 : \22{qt(prob0) : [0, 0, 0, 0], qt(prob1) : [0, 0, 0, 0]}\22,     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : false,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [1, 2],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [1],     \22identifier\22 : 43   }\00", section "llvm.metadata"
@.str.20 = private unnamed_addr constant [421 x i8] c"{     \22matrix_real\22 : \22{qt(prob0) : [0.5, 0, 0, 0.5], qt(prob1) : [0.5, 0, 0, 0.5]}\22,     \22matrix_imag\22 : \22{qt(prob0) : [0, 0.5, -0.5, 0], qt(prob1) : [0, -0.5, 0.5, 0]}\22,     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : false,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [1, 2],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [2],     \22identifier\22 : 44   }\00", section "llvm.metadata"
@.str.21 = private unnamed_addr constant [403 x i8] c"{     \22matrix_real\22 : \22{qt(prob0) : [1, 0, 0, 0], qt(prob1) : [0, 0, 0, 1]}\22,     \22matrix_imag\22 : \22{qt(prob0) : [0, 0, 0, 0], qt(prob1) : [0, 0, 0, 0]}\22,     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : false,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [1, 2],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [3],     \22identifier\22 : 45   }\00", section "llvm.metadata"
@.str.22 = private unnamed_addr constant [420 x i8] c"{     \22matrix_real\22 : \22[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, cos(angle)]\22,     \22matrix_imag\22 : \22[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -sin(angle)]\22,     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0, 1],     \22parametric_list\22 : [2],     \22control_qubit_list\22 : [0, 1],     \22local_basis_list\22 : [3, 3],     \22identifier\22 : 46   }\00", section "llvm.metadata"
@.str.23 = private unnamed_addr constant [423 x i8] c"{     \22matrix_real\22 : \22[cos(theta/2), -sin(theta/2) sin(phi), sin(theta/2) sin(phi), cos(theta/2)]\22,     \22matrix_imag\22 : \22[0, -sin(theta/2)cos(phi), sin(theta/2)cos(phi), 0]\22,     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0],     \22parametric_list\22 : [1,2],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [0],     \22identifier\22 : 47   }\00", section "llvm.metadata"
@.str.24 = private unnamed_addr constant [503 x i8] c"{     \22matrix_real\22 : \22[1, 0, 0, 0, 0, (1+cos(angle))/2, (1-cos(angle))/2, 0, 0, (1-cos(angle))/2, (1+cos(angle))/2, 0, 0, 0, 0, 1]\22,     \22matrix_imag\22 : \22[1, 0, 0, 0, 0, sin(angle)/2, -sin(angle)/2, 0, 0, -sin(angle)/2, sin(angle)/2, 0, 0, 0, 0, 1]\22,     \22matrix_order\22 : \22rm\22,     \22is_hermitian\22 : false,     \22is_unitary\22 : true,     \22is_mutable\22 : true,     \22qubit_list\22 : [0, 1],     \22parametric_list\22 : [2],     \22control_qubit_list\22 : [],     \22local_basis_list\22 : [0, 0],     \22identifier\22 : 53   }\00", section "llvm.metadata"
@q = dso_local global [7 x i16] zeroinitializer, align 2
@c = dso_local global [7 x i8] zeroinitializer, align 1
@llvm.global.annotations = appending global [24 x { ptr, ptr, ptr, i32, ptr }] [{ ptr, ptr, ptr, i32, ptr } { ptr @_Z1HRt, ptr @.str, ptr @.str.1, i32 48, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr @_Z1XRt, ptr @.str.2, ptr @.str.1, i32 68, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr @_Z1YRt, ptr @.str.3, ptr @.str.1, i32 88, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr @_Z1ZRt, ptr @.str.4, ptr @.str.1, i32 109, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr @_Z1SRt, ptr @.str.5, ptr @.str.1, i32 129, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr @_Z4SdagRt, ptr @.str.6, ptr @.str.1, i32 149, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr @_Z1TRt, ptr @.str.7, ptr @.str.1, i32 169, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr @_Z4TdagRt, ptr @.str.8, ptr @.str.1, i32 189, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr @_Z2RXRtd, ptr @.str.9, ptr @.str.1, i32 209, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr @_Z2RYRtd, ptr @.str.10, ptr @.str.1, i32 230, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr @_Z2RZRtd, ptr @.str.11, ptr @.str.1, i32 251, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr @_Z2CZRtS_, ptr @.str.12, ptr @.str.1, i32 272, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr @_Z4CNOTRtS_, ptr @.str.13, ptr @.str.1, i32 293, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr @_Z4SWAPRtS_, ptr @.str.14, ptr @.str.1, i32 314, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr @_Z7ToffoliRtS_S_, ptr @.str.15, ptr @.str.1, i32 335, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr @_Z5PrepXRt, ptr @.str.16, ptr @.str.1, i32 359, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr @_Z5PrepYRt, ptr @.str.17, ptr @.str.1, i32 377, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr @_Z5PrepZRt, ptr @.str.18, ptr @.str.1, i32 395, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr @_Z5MeasXRtRbb, ptr @.str.19, ptr @.str.1, i32 413, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr @_Z5MeasYRtRbb, ptr @.str.20, ptr @.str.1, i32 433, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr @_Z5MeasZRtRbb, ptr @.str.21, ptr @.str.1, i32 453, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr @_Z6CPhaseRtS_d, ptr @.str.22, ptr @.str.1, i32 481, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr @_Z3RXYRtdd, ptr @.str.23, ptr @.str.1, i32 503, ptr null }, { ptr, ptr, ptr, i32, ptr } { ptr @_Z5SwapARtS_d, ptr @.str.24, ptr @.str.1, i32 525, ptr null }], section "llvm.metadata"

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z1HRt(ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %q) #0 {
entry:
  tail call void @llvm.quantum.qubit(ptr noundef nonnull align 2 dereferenceable(2) %q)
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z1XRt(ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %q) #0 {
entry:
  tail call void @llvm.quantum.qubit(ptr noundef nonnull align 2 dereferenceable(2) %q)
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z1YRt(ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %q) #0 {
entry:
  tail call void @llvm.quantum.qubit(ptr noundef nonnull align 2 dereferenceable(2) %q)
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z1ZRt(ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %q) #0 {
entry:
  tail call void @llvm.quantum.qubit(ptr noundef nonnull align 2 dereferenceable(2) %q)
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z1SRt(ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %q) #0 {
entry:
  tail call void @llvm.quantum.qubit(ptr noundef nonnull align 2 dereferenceable(2) %q)
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z4SdagRt(ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %q) #0 {
entry:
  tail call void @llvm.quantum.qubit(ptr noundef nonnull align 2 dereferenceable(2) %q)
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z1TRt(ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %q) #0 {
entry:
  tail call void @llvm.quantum.qubit(ptr noundef nonnull align 2 dereferenceable(2) %q)
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z4TdagRt(ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %q) #0 {
entry:
  tail call void @llvm.quantum.qubit(ptr noundef nonnull align 2 dereferenceable(2) %q)
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z2RXRtd(ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %q, double noundef %angle) #0 {
entry:
  tail call void @llvm.quantum.qubit(ptr noundef nonnull align 2 dereferenceable(2) %q)
  tail call void @llvm.quantum.param(double noundef %angle)
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z2RYRtd(ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %q, double noundef %angle) #0 {
entry:
  tail call void @llvm.quantum.qubit(ptr noundef nonnull align 2 dereferenceable(2) %q)
  tail call void @llvm.quantum.param(double noundef %angle)
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z2RZRtd(ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %q, double noundef %angle) #0 {
entry:
  tail call void @llvm.quantum.qubit(ptr noundef nonnull align 2 dereferenceable(2) %q)
  tail call void @llvm.quantum.param(double noundef %angle)
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z2CZRtS_(ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %ctrl, ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %target) #0 {
entry:
  tail call void @llvm.quantum.qubit(ptr noundef nonnull align 2 dereferenceable(2) %ctrl)
  tail call void @llvm.quantum.qubit(ptr noundef nonnull %target)
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z4CNOTRtS_(ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %ctrl, ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %target) #0 {
entry:
  tail call void @llvm.quantum.qubit(ptr noundef nonnull align 2 dereferenceable(2) %ctrl)
  tail call void @llvm.quantum.qubit(ptr noundef nonnull %target)
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z4SWAPRtS_(ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %ctrl, ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %target) #0 {
entry:
  tail call void @llvm.quantum.qubit(ptr noundef nonnull align 2 dereferenceable(2) %ctrl)
  tail call void @llvm.quantum.qubit(ptr noundef nonnull %target)
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z7ToffoliRtS_S_(ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %ctrl0, ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %ctrl1, ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %target) #0 {
entry:
  tail call void @llvm.quantum.qubit(ptr noundef nonnull align 2 dereferenceable(2) %ctrl0)
  tail call void @llvm.quantum.qubit(ptr noundef nonnull %ctrl1)
  tail call void @llvm.quantum.qubit(ptr noundef nonnull %target)
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z5PrepXRt(ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %q) #0 {
entry:
  tail call void @llvm.quantum.qubit(ptr noundef nonnull align 2 dereferenceable(2) %q)
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z5PrepYRt(ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %q) #0 {
entry:
  tail call void @llvm.quantum.qubit(ptr noundef nonnull align 2 dereferenceable(2) %q)
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z5PrepZRt(ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %q) #0 {
entry:
  tail call void @llvm.quantum.qubit(ptr noundef nonnull align 2 dereferenceable(2) %q)
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z5MeasXRtRbb(ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %q, ptr noundef nonnull align 1 dereferenceable(1) "cbit_ref" %c, i1 noundef zeroext %flip) #0 {
entry:
  tail call void @llvm.quantum.qubit(ptr noundef nonnull align 2 dereferenceable(2) %q)
  tail call void @llvm.quantum.cbit(ptr noundef nonnull %c)
  %conv = uitofp i1 %flip to double
  tail call void @llvm.quantum.param(double noundef %conv)
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z5MeasYRtRbb(ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %q, ptr noundef nonnull align 1 dereferenceable(1) "cbit_ref" %c, i1 noundef zeroext %flip) #0 {
entry:
  tail call void @llvm.quantum.qubit(ptr noundef nonnull align 2 dereferenceable(2) %q)
  tail call void @llvm.quantum.cbit(ptr noundef nonnull %c)
  %conv = uitofp i1 %flip to double
  tail call void @llvm.quantum.param(double noundef %conv)
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z5MeasZRtRbb(ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %q, ptr noundef nonnull align 1 dereferenceable(1) "cbit_ref" %c, i1 noundef zeroext %flip) #0 {
entry:
  tail call void @llvm.quantum.qubit(ptr noundef nonnull align 2 dereferenceable(2) %q)
  tail call void @llvm.quantum.cbit(ptr noundef nonnull %c)
  %conv = uitofp i1 %flip to double
  tail call void @llvm.quantum.param(double noundef %conv)
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z6CPhaseRtS_d(ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %ctrl, ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %target, double noundef %angle) #0 {
entry:
  tail call void @llvm.quantum.qubit(ptr noundef nonnull align 2 dereferenceable(2) %ctrl)
  tail call void @llvm.quantum.qubit(ptr noundef nonnull %target)
  tail call void @llvm.quantum.param(double noundef %angle)
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z3RXYRtdd(ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %q, double noundef %theta, double noundef %phi) #0 {
entry:
  tail call void @llvm.quantum.qubit(ptr noundef nonnull align 2 dereferenceable(2) %q)
  tail call void @llvm.quantum.param(double noundef %theta)
  tail call void @llvm.quantum.param(double noundef %phi)
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z5SwapARtS_d(ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %q1, ptr noundef nonnull align 2 dereferenceable(2) "qubit_ref" %q2, double noundef %angle) #0 {
entry:
  tail call void @llvm.quantum.qubit(ptr noundef nonnull align 2 dereferenceable(2) %q1)
  tail call void @llvm.quantum.qubit(ptr noundef nonnull %q2)
  tail call void @llvm.quantum.param(double noundef %angle)
  ret void
}

; Function Attrs: mustprogress noinline nounwind uwtable
define dso_local void @_Z5mbl_7v.stub() local_unnamed_addr #0 section ".qbbs_text" {
; CHECK-LABEL: define dso_local void @_Z5mbl_7v.stub
; CHECK-SAME: () local_unnamed_addr #[[ATTR0:[0-9]+]] section ".qbbs_text" {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br label [[AQCC_QUANTUM:%.*]]
; CHECK:       aqcc.quantum:
; CHECK-NEXT:    [[ARRAYIDX101:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[ARRAYIDX263:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[TMP0:%.*]] = load i16, ptr [[ARRAYIDX263]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP0]], double 0x400921FB54442D18, double 0.000000e+00, i32 1)
; CHECK-NEXT:    [[ARRAYIDX100:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[ARRAYIDX262:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[TMP1:%.*]] = load i16, ptr [[ARRAYIDX262]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP1]], double 0x400921FB54442D18, double 0.000000e+00, i32 0)
; CHECK-NEXT:    [[ARRAYIDX99:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[ARRAYIDX261:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[TMP2:%.*]] = load i16, ptr [[ARRAYIDX261]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP2]], double 0x400921FB54442D18, double 0.000000e+00, i32 0)
; CHECK-NEXT:    [[ARRAYIDX98:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 6
; CHECK-NEXT:    [[ARRAYIDX260:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 6
; CHECK-NEXT:    [[TMP3:%.*]] = load i16, ptr [[ARRAYIDX260]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP3]], double 0x400921FB54442D18, double 0.000000e+00, i32 0)
; CHECK-NEXT:    [[ARRAYIDX96:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[ARRAYIDX97:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[ARRAYIDX259:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[TMP4:%.*]] = load i16, ptr [[ARRAYIDX259]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP4]], double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 0)
; CHECK-NEXT:    [[ARRAYIDX257:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[TMP5:%.*]] = load i16, ptr [[ARRAYIDX257]], align 2
; CHECK-NEXT:    [[ARRAYIDX258:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[TMP6:%.*]] = load i16, ptr [[ARRAYIDX258]], align 2
; CHECK-NEXT:    call void @llvm.quantum.cphase(i16 [[TMP5]], i16 [[TMP6]], double 0x400921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX256:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[TMP7:%.*]] = load i16, ptr [[ARRAYIDX256]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP7]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX94:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[ARRAYIDX95:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[ARRAYIDX255:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[TMP8:%.*]] = load i16, ptr [[ARRAYIDX255]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP8]], double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 0)
; CHECK-NEXT:    [[ARRAYIDX253:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[TMP9:%.*]] = load i16, ptr [[ARRAYIDX253]], align 2
; CHECK-NEXT:    [[ARRAYIDX254:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[TMP10:%.*]] = load i16, ptr [[ARRAYIDX254]], align 2
; CHECK-NEXT:    call void @llvm.quantum.cphase(i16 [[TMP9]], i16 [[TMP10]], double 0x400921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX252:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[TMP11:%.*]] = load i16, ptr [[ARRAYIDX252]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP11]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX92:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[ARRAYIDX93:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[ARRAYIDX251:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[TMP12:%.*]] = load i16, ptr [[ARRAYIDX251]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP12]], double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 0)
; CHECK-NEXT:    [[ARRAYIDX249:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[TMP13:%.*]] = load i16, ptr [[ARRAYIDX249]], align 2
; CHECK-NEXT:    [[ARRAYIDX250:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[TMP14:%.*]] = load i16, ptr [[ARRAYIDX250]], align 2
; CHECK-NEXT:    call void @llvm.quantum.cphase(i16 [[TMP13]], i16 [[TMP14]], double 0x400921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX248:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[TMP15:%.*]] = load i16, ptr [[ARRAYIDX248]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP15]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX91:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 6
; CHECK-NEXT:    [[ARRAYIDX247:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 6
; CHECK-NEXT:    [[TMP16:%.*]] = load i16, ptr [[ARRAYIDX247]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotz(i16 [[TMP16]], double 0x4027B0228ED0F7FD, i32 0)
; CHECK-NEXT:    [[ARRAYIDX90:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[ARRAYIDX246:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[TMP17:%.*]] = load i16, ptr [[ARRAYIDX246]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotz(i16 [[TMP17]], double 0x4023208DCA464625, i32 0)
; CHECK-NEXT:    [[ARRAYIDX89:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[ARRAYIDX245:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[TMP18:%.*]] = load i16, ptr [[ARRAYIDX245]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotz(i16 [[TMP18]], double 8.000000e+00, i32 0)
; CHECK-NEXT:    [[ARRAYIDX88:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[ARRAYIDX244:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[TMP19:%.*]] = load i16, ptr [[ARRAYIDX244]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotz(i16 [[TMP19]], double 0x3FF6A4AADAA35752, i32 0)
; CHECK-NEXT:    [[ARRAYIDX87:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[ARRAYIDX243:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[TMP20:%.*]] = load i16, ptr [[ARRAYIDX243]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotz(i16 [[TMP20]], double 8.000000e+00, i32 0)
; CHECK-NEXT:    [[ARRAYIDX86:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[ARRAYIDX242:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[TMP21:%.*]] = load i16, ptr [[ARRAYIDX242]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotz(i16 [[TMP21]], double 0x40225AB85AA5E40E, i32 0)
; CHECK-NEXT:    [[ARRAYIDX85:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[ARRAYIDX241:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[TMP22:%.*]] = load i16, ptr [[ARRAYIDX241]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotz(i16 [[TMP22]], double 8.000000e+00, i32 0)
; CHECK-NEXT:    [[ARRAYIDX84:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[ARRAYIDX240:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[TMP23:%.*]] = load i16, ptr [[ARRAYIDX240]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP23]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX239:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[TMP24:%.*]] = load i16, ptr [[ARRAYIDX239]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP24]], double 0x400921FB54442D18, double 0.000000e+00, i32 0)
; CHECK-NEXT:    [[ARRAYIDX83:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[ARRAYIDX238:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[TMP25:%.*]] = load i16, ptr [[ARRAYIDX238]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP25]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX237:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[TMP26:%.*]] = load i16, ptr [[ARRAYIDX237]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP26]], double 0x400921FB54442D18, double 0.000000e+00, i32 0)
; CHECK-NEXT:    [[ARRAYIDX82:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[ARRAYIDX236:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[TMP27:%.*]] = load i16, ptr [[ARRAYIDX236]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP27]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX235:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[TMP28:%.*]] = load i16, ptr [[ARRAYIDX235]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP28]], double 0x400921FB54442D18, double 0.000000e+00, i32 0)
; CHECK-NEXT:    [[ARRAYIDX81:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[ARRAYIDX234:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[TMP29:%.*]] = load i16, ptr [[ARRAYIDX234]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotz(i16 [[TMP29]], double 0x3FFB7812AEEF4459, i32 0)
; CHECK-NEXT:    [[ARRAYIDX80:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[ARRAYIDX233:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[TMP30:%.*]] = load i16, ptr [[ARRAYIDX233]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotz(i16 [[TMP30]], double 0x3FFB7812AEEF4459, i32 0)
; CHECK-NEXT:    [[ARRAYIDX79:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[ARRAYIDX232:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[TMP31:%.*]] = load i16, ptr [[ARRAYIDX232]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotz(i16 [[TMP31]], double 0x3FFB7812AEEF4459, i32 0)
; CHECK-NEXT:    [[ARRAYIDX77:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[ARRAYIDX78:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[ARRAYIDX231:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[TMP32:%.*]] = load i16, ptr [[ARRAYIDX231]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP32]], double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 0)
; CHECK-NEXT:    [[ARRAYIDX229:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[TMP33:%.*]] = load i16, ptr [[ARRAYIDX229]], align 2
; CHECK-NEXT:    [[ARRAYIDX230:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[TMP34:%.*]] = load i16, ptr [[ARRAYIDX230]], align 2
; CHECK-NEXT:    call void @llvm.quantum.cphase(i16 [[TMP33]], i16 [[TMP34]], double 0x400921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX228:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[TMP35:%.*]] = load i16, ptr [[ARRAYIDX228]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP35]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX75:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[ARRAYIDX76:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[ARRAYIDX227:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[TMP36:%.*]] = load i16, ptr [[ARRAYIDX227]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP36]], double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 0)
; CHECK-NEXT:    [[ARRAYIDX225:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[TMP37:%.*]] = load i16, ptr [[ARRAYIDX225]], align 2
; CHECK-NEXT:    [[ARRAYIDX226:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[TMP38:%.*]] = load i16, ptr [[ARRAYIDX226]], align 2
; CHECK-NEXT:    call void @llvm.quantum.cphase(i16 [[TMP37]], i16 [[TMP38]], double 0x400921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX224:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[TMP39:%.*]] = load i16, ptr [[ARRAYIDX224]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP39]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX73:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[ARRAYIDX74:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[ARRAYIDX223:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[TMP40:%.*]] = load i16, ptr [[ARRAYIDX223]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP40]], double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 0)
; CHECK-NEXT:    [[ARRAYIDX221:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[TMP41:%.*]] = load i16, ptr [[ARRAYIDX221]], align 2
; CHECK-NEXT:    [[ARRAYIDX222:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[TMP42:%.*]] = load i16, ptr [[ARRAYIDX222]], align 2
; CHECK-NEXT:    call void @llvm.quantum.cphase(i16 [[TMP41]], i16 [[TMP42]], double 0x400921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX220:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[TMP43:%.*]] = load i16, ptr [[ARRAYIDX220]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP43]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX72:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[ARRAYIDX219:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[TMP44:%.*]] = load i16, ptr [[ARRAYIDX219]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotz(i16 [[TMP44]], double 0x4025B2F8FE66442C, i32 0)
; CHECK-NEXT:    [[ARRAYIDX71:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[ARRAYIDX218:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[TMP45:%.*]] = load i16, ptr [[ARRAYIDX218]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotz(i16 [[TMP45]], double 0x4025B2F8FE66442C, i32 0)
; CHECK-NEXT:    [[ARRAYIDX70:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[ARRAYIDX217:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[TMP46:%.*]] = load i16, ptr [[ARRAYIDX217]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotz(i16 [[TMP46]], double 0x4025B2F8FE66442C, i32 0)
; CHECK-NEXT:    [[ARRAYIDX68:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[ARRAYIDX69:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[ARRAYIDX216:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[TMP47:%.*]] = load i16, ptr [[ARRAYIDX216]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP47]], double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 0)
; CHECK-NEXT:    [[ARRAYIDX214:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[TMP48:%.*]] = load i16, ptr [[ARRAYIDX214]], align 2
; CHECK-NEXT:    [[ARRAYIDX215:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[TMP49:%.*]] = load i16, ptr [[ARRAYIDX215]], align 2
; CHECK-NEXT:    call void @llvm.quantum.cphase(i16 [[TMP48]], i16 [[TMP49]], double 0x400921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX213:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[TMP50:%.*]] = load i16, ptr [[ARRAYIDX213]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP50]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX66:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[ARRAYIDX67:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[ARRAYIDX212:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[TMP51:%.*]] = load i16, ptr [[ARRAYIDX212]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP51]], double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 0)
; CHECK-NEXT:    [[ARRAYIDX210:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[TMP52:%.*]] = load i16, ptr [[ARRAYIDX210]], align 2
; CHECK-NEXT:    [[ARRAYIDX211:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[TMP53:%.*]] = load i16, ptr [[ARRAYIDX211]], align 2
; CHECK-NEXT:    call void @llvm.quantum.cphase(i16 [[TMP52]], i16 [[TMP53]], double 0x400921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX209:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[TMP54:%.*]] = load i16, ptr [[ARRAYIDX209]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP54]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX64:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[ARRAYIDX65:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[ARRAYIDX208:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[TMP55:%.*]] = load i16, ptr [[ARRAYIDX208]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP55]], double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 0)
; CHECK-NEXT:    [[ARRAYIDX206:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[TMP56:%.*]] = load i16, ptr [[ARRAYIDX206]], align 2
; CHECK-NEXT:    [[ARRAYIDX207:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[TMP57:%.*]] = load i16, ptr [[ARRAYIDX207]], align 2
; CHECK-NEXT:    call void @llvm.quantum.cphase(i16 [[TMP56]], i16 [[TMP57]], double 0x400921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX205:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[TMP58:%.*]] = load i16, ptr [[ARRAYIDX205]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP58]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX63:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[ARRAYIDX204:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[TMP59:%.*]] = load i16, ptr [[ARRAYIDX204]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP59]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX203:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[TMP60:%.*]] = load i16, ptr [[ARRAYIDX203]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP60]], double 0x400921FB54442D18, double 0.000000e+00, i32 0)
; CHECK-NEXT:    [[ARRAYIDX62:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[ARRAYIDX202:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[TMP61:%.*]] = load i16, ptr [[ARRAYIDX202]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP61]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX201:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[TMP62:%.*]] = load i16, ptr [[ARRAYIDX201]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP62]], double 0x400921FB54442D18, double 0.000000e+00, i32 0)
; CHECK-NEXT:    [[ARRAYIDX61:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[ARRAYIDX200:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[TMP63:%.*]] = load i16, ptr [[ARRAYIDX200]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP63]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX199:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[TMP64:%.*]] = load i16, ptr [[ARRAYIDX199]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP64]], double 0x400921FB54442D18, double 0.000000e+00, i32 0)
; CHECK-NEXT:    [[ARRAYIDX59:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[ARRAYIDX60:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[ARRAYIDX198:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[TMP65:%.*]] = load i16, ptr [[ARRAYIDX198]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP65]], double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 0)
; CHECK-NEXT:    [[ARRAYIDX196:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[TMP66:%.*]] = load i16, ptr [[ARRAYIDX196]], align 2
; CHECK-NEXT:    [[ARRAYIDX197:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[TMP67:%.*]] = load i16, ptr [[ARRAYIDX197]], align 2
; CHECK-NEXT:    call void @llvm.quantum.cphase(i16 [[TMP66]], i16 [[TMP67]], double 0x400921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX195:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[TMP68:%.*]] = load i16, ptr [[ARRAYIDX195]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP68]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX57:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[ARRAYIDX58:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[ARRAYIDX194:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[TMP69:%.*]] = load i16, ptr [[ARRAYIDX194]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP69]], double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 0)
; CHECK-NEXT:    [[ARRAYIDX192:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[TMP70:%.*]] = load i16, ptr [[ARRAYIDX192]], align 2
; CHECK-NEXT:    [[ARRAYIDX193:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[TMP71:%.*]] = load i16, ptr [[ARRAYIDX193]], align 2
; CHECK-NEXT:    call void @llvm.quantum.cphase(i16 [[TMP70]], i16 [[TMP71]], double 0x400921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX191:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[TMP72:%.*]] = load i16, ptr [[ARRAYIDX191]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP72]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX55:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[ARRAYIDX56:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[ARRAYIDX190:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[TMP73:%.*]] = load i16, ptr [[ARRAYIDX190]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP73]], double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 0)
; CHECK-NEXT:    [[ARRAYIDX188:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[TMP74:%.*]] = load i16, ptr [[ARRAYIDX188]], align 2
; CHECK-NEXT:    [[ARRAYIDX189:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[TMP75:%.*]] = load i16, ptr [[ARRAYIDX189]], align 2
; CHECK-NEXT:    call void @llvm.quantum.cphase(i16 [[TMP74]], i16 [[TMP75]], double 0x400921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX187:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[TMP76:%.*]] = load i16, ptr [[ARRAYIDX187]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP76]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX54:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[ARRAYIDX186:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[TMP77:%.*]] = load i16, ptr [[ARRAYIDX186]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP77]], double 0x4013C9D45DCAC069, double 0.000000e+00, i32 0)
; CHECK-NEXT:    [[ARRAYIDX52:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[ARRAYIDX53:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[ARRAYIDX185:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[TMP78:%.*]] = load i16, ptr [[ARRAYIDX185]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP78]], double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 0)
; CHECK-NEXT:    [[ARRAYIDX183:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[TMP79:%.*]] = load i16, ptr [[ARRAYIDX183]], align 2
; CHECK-NEXT:    [[ARRAYIDX184:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[TMP80:%.*]] = load i16, ptr [[ARRAYIDX184]], align 2
; CHECK-NEXT:    call void @llvm.quantum.cphase(i16 [[TMP79]], i16 [[TMP80]], double 0x400921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX182:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[TMP81:%.*]] = load i16, ptr [[ARRAYIDX182]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP81]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX50:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[ARRAYIDX51:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[ARRAYIDX181:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[TMP82:%.*]] = load i16, ptr [[ARRAYIDX181]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP82]], double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 0)
; CHECK-NEXT:    [[ARRAYIDX179:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[TMP83:%.*]] = load i16, ptr [[ARRAYIDX179]], align 2
; CHECK-NEXT:    [[ARRAYIDX180:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[TMP84:%.*]] = load i16, ptr [[ARRAYIDX180]], align 2
; CHECK-NEXT:    call void @llvm.quantum.cphase(i16 [[TMP83]], i16 [[TMP84]], double 0x400921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX178:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[TMP85:%.*]] = load i16, ptr [[ARRAYIDX178]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP85]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX48:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[ARRAYIDX49:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 6
; CHECK-NEXT:    [[ARRAYIDX177:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 6
; CHECK-NEXT:    [[TMP86:%.*]] = load i16, ptr [[ARRAYIDX177]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP86]], double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 0)
; CHECK-NEXT:    [[ARRAYIDX175:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[TMP87:%.*]] = load i16, ptr [[ARRAYIDX175]], align 2
; CHECK-NEXT:    [[ARRAYIDX176:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 6
; CHECK-NEXT:    [[TMP88:%.*]] = load i16, ptr [[ARRAYIDX176]], align 2
; CHECK-NEXT:    call void @llvm.quantum.cphase(i16 [[TMP87]], i16 [[TMP88]], double 0x400921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX174:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 6
; CHECK-NEXT:    [[TMP89:%.*]] = load i16, ptr [[ARRAYIDX174]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP89]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX47:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[ARRAYIDX173:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[TMP90:%.*]] = load i16, ptr [[ARRAYIDX173]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotz(i16 [[TMP90]], double 0x401C48122CADE12F, i32 0)
; CHECK-NEXT:    [[ARRAYIDX46:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[ARRAYIDX172:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[TMP91:%.*]] = load i16, ptr [[ARRAYIDX172]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotz(i16 [[TMP91]], double 8.000000e+00, i32 0)
; CHECK-NEXT:    [[ARRAYIDX45:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[ARRAYIDX171:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[TMP92:%.*]] = load i16, ptr [[ARRAYIDX171]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotz(i16 [[TMP92]], double 0x3FFE7C72183E883B, i32 0)
; CHECK-NEXT:    [[ARRAYIDX44:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[ARRAYIDX170:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[TMP93:%.*]] = load i16, ptr [[ARRAYIDX170]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotz(i16 [[TMP93]], double 8.000000e+00, i32 0)
; CHECK-NEXT:    [[ARRAYIDX43:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[ARRAYIDX169:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[TMP94:%.*]] = load i16, ptr [[ARRAYIDX169]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotz(i16 [[TMP94]], double 0x4018F92744F1072F, i32 0)
; CHECK-NEXT:    [[ARRAYIDX42:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 6
; CHECK-NEXT:    [[ARRAYIDX168:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 6
; CHECK-NEXT:    [[TMP95:%.*]] = load i16, ptr [[ARRAYIDX168]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotz(i16 [[TMP95]], double 8.000000e+00, i32 0)
; CHECK-NEXT:    [[ARRAYIDX41:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[ARRAYIDX167:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[TMP96:%.*]] = load i16, ptr [[ARRAYIDX167]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP96]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX166:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[TMP97:%.*]] = load i16, ptr [[ARRAYIDX166]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP97]], double 0x400921FB54442D18, double 0.000000e+00, i32 0)
; CHECK-NEXT:    [[ARRAYIDX40:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[ARRAYIDX165:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[TMP98:%.*]] = load i16, ptr [[ARRAYIDX165]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP98]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX164:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[TMP99:%.*]] = load i16, ptr [[ARRAYIDX164]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP99]], double 0x400921FB54442D18, double 0.000000e+00, i32 0)
; CHECK-NEXT:    [[ARRAYIDX39:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[ARRAYIDX163:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[TMP100:%.*]] = load i16, ptr [[ARRAYIDX163]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP100]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX162:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[TMP101:%.*]] = load i16, ptr [[ARRAYIDX162]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP101]], double 0x400921FB54442D18, double 0.000000e+00, i32 0)
; CHECK-NEXT:    [[ARRAYIDX38:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[ARRAYIDX161:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[TMP102:%.*]] = load i16, ptr [[ARRAYIDX161]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotz(i16 [[TMP102]], double 0x3FFB7812AEEF4459, i32 0)
; CHECK-NEXT:    [[ARRAYIDX37:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[ARRAYIDX160:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[TMP103:%.*]] = load i16, ptr [[ARRAYIDX160]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotz(i16 [[TMP103]], double 0x3FFB7812AEEF4459, i32 0)
; CHECK-NEXT:    [[ARRAYIDX36:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[ARRAYIDX159:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[TMP104:%.*]] = load i16, ptr [[ARRAYIDX159]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotz(i16 [[TMP104]], double 0x3FFB7812AEEF4459, i32 0)
; CHECK-NEXT:    [[ARRAYIDX34:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[ARRAYIDX35:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[ARRAYIDX158:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[TMP105:%.*]] = load i16, ptr [[ARRAYIDX158]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP105]], double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 0)
; CHECK-NEXT:    [[ARRAYIDX156:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[TMP106:%.*]] = load i16, ptr [[ARRAYIDX156]], align 2
; CHECK-NEXT:    [[ARRAYIDX157:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[TMP107:%.*]] = load i16, ptr [[ARRAYIDX157]], align 2
; CHECK-NEXT:    call void @llvm.quantum.cphase(i16 [[TMP106]], i16 [[TMP107]], double 0x400921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX155:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[TMP108:%.*]] = load i16, ptr [[ARRAYIDX155]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP108]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX32:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[ARRAYIDX33:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[ARRAYIDX154:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[TMP109:%.*]] = load i16, ptr [[ARRAYIDX154]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP109]], double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 0)
; CHECK-NEXT:    [[ARRAYIDX152:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[TMP110:%.*]] = load i16, ptr [[ARRAYIDX152]], align 2
; CHECK-NEXT:    [[ARRAYIDX153:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[TMP111:%.*]] = load i16, ptr [[ARRAYIDX153]], align 2
; CHECK-NEXT:    call void @llvm.quantum.cphase(i16 [[TMP110]], i16 [[TMP111]], double 0x400921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX151:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[TMP112:%.*]] = load i16, ptr [[ARRAYIDX151]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP112]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX30:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 6
; CHECK-NEXT:    [[ARRAYIDX31:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[ARRAYIDX150:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[TMP113:%.*]] = load i16, ptr [[ARRAYIDX150]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP113]], double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 0)
; CHECK-NEXT:    [[ARRAYIDX148:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 6
; CHECK-NEXT:    [[TMP114:%.*]] = load i16, ptr [[ARRAYIDX148]], align 2
; CHECK-NEXT:    [[ARRAYIDX149:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[TMP115:%.*]] = load i16, ptr [[ARRAYIDX149]], align 2
; CHECK-NEXT:    call void @llvm.quantum.cphase(i16 [[TMP114]], i16 [[TMP115]], double 0x400921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX147:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[TMP116:%.*]] = load i16, ptr [[ARRAYIDX147]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP116]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX29:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[ARRAYIDX146:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[TMP117:%.*]] = load i16, ptr [[ARRAYIDX146]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotz(i16 [[TMP117]], double 0x4025B2F8FE66442C, i32 0)
; CHECK-NEXT:    [[ARRAYIDX28:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[ARRAYIDX145:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[TMP118:%.*]] = load i16, ptr [[ARRAYIDX145]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotz(i16 [[TMP118]], double 0x4025B2F8FE66442C, i32 0)
; CHECK-NEXT:    [[ARRAYIDX27:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[ARRAYIDX144:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[TMP119:%.*]] = load i16, ptr [[ARRAYIDX144]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotz(i16 [[TMP119]], double 0x4025B2F8FE66442C, i32 0)
; CHECK-NEXT:    [[ARRAYIDX25:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[ARRAYIDX26:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[ARRAYIDX143:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[TMP120:%.*]] = load i16, ptr [[ARRAYIDX143]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP120]], double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 0)
; CHECK-NEXT:    [[ARRAYIDX141:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[TMP121:%.*]] = load i16, ptr [[ARRAYIDX141]], align 2
; CHECK-NEXT:    [[ARRAYIDX142:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[TMP122:%.*]] = load i16, ptr [[ARRAYIDX142]], align 2
; CHECK-NEXT:    call void @llvm.quantum.cphase(i16 [[TMP121]], i16 [[TMP122]], double 0x400921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX140:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[TMP123:%.*]] = load i16, ptr [[ARRAYIDX140]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP123]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX23:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[ARRAYIDX24:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[ARRAYIDX139:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[TMP124:%.*]] = load i16, ptr [[ARRAYIDX139]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP124]], double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 0)
; CHECK-NEXT:    [[ARRAYIDX137:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[TMP125:%.*]] = load i16, ptr [[ARRAYIDX137]], align 2
; CHECK-NEXT:    [[ARRAYIDX138:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[TMP126:%.*]] = load i16, ptr [[ARRAYIDX138]], align 2
; CHECK-NEXT:    call void @llvm.quantum.cphase(i16 [[TMP125]], i16 [[TMP126]], double 0x400921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX136:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[TMP127:%.*]] = load i16, ptr [[ARRAYIDX136]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP127]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX21:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 6
; CHECK-NEXT:    [[ARRAYIDX22:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[ARRAYIDX135:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[TMP128:%.*]] = load i16, ptr [[ARRAYIDX135]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP128]], double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 0)
; CHECK-NEXT:    [[ARRAYIDX133:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 6
; CHECK-NEXT:    [[TMP129:%.*]] = load i16, ptr [[ARRAYIDX133]], align 2
; CHECK-NEXT:    [[ARRAYIDX134:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[TMP130:%.*]] = load i16, ptr [[ARRAYIDX134]], align 2
; CHECK-NEXT:    call void @llvm.quantum.cphase(i16 [[TMP129]], i16 [[TMP130]], double 0x400921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX132:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[TMP131:%.*]] = load i16, ptr [[ARRAYIDX132]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP131]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX20:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[ARRAYIDX131:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[TMP132:%.*]] = load i16, ptr [[ARRAYIDX131]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP132]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX130:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[TMP133:%.*]] = load i16, ptr [[ARRAYIDX130]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP133]], double 0x400921FB54442D18, double 0.000000e+00, i32 0)
; CHECK-NEXT:    [[ARRAYIDX19:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[ARRAYIDX129:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[TMP134:%.*]] = load i16, ptr [[ARRAYIDX129]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP134]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX128:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[TMP135:%.*]] = load i16, ptr [[ARRAYIDX128]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP135]], double 0x400921FB54442D18, double 0.000000e+00, i32 0)
; CHECK-NEXT:    [[ARRAYIDX18:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[ARRAYIDX127:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[TMP136:%.*]] = load i16, ptr [[ARRAYIDX127]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP136]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX126:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[TMP137:%.*]] = load i16, ptr [[ARRAYIDX126]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP137]], double 0x400921FB54442D18, double 0.000000e+00, i32 0)
; CHECK-NEXT:    [[ARRAYIDX16:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[ARRAYIDX17:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[ARRAYIDX125:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[TMP138:%.*]] = load i16, ptr [[ARRAYIDX125]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP138]], double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 0)
; CHECK-NEXT:    [[ARRAYIDX123:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[TMP139:%.*]] = load i16, ptr [[ARRAYIDX123]], align 2
; CHECK-NEXT:    [[ARRAYIDX124:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[TMP140:%.*]] = load i16, ptr [[ARRAYIDX124]], align 2
; CHECK-NEXT:    call void @llvm.quantum.cphase(i16 [[TMP139]], i16 [[TMP140]], double 0x400921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX122:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[TMP141:%.*]] = load i16, ptr [[ARRAYIDX122]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP141]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX14:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[ARRAYIDX15:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[ARRAYIDX121:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[TMP142:%.*]] = load i16, ptr [[ARRAYIDX121]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP142]], double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 0)
; CHECK-NEXT:    [[ARRAYIDX119:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[TMP143:%.*]] = load i16, ptr [[ARRAYIDX119]], align 2
; CHECK-NEXT:    [[ARRAYIDX120:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[TMP144:%.*]] = load i16, ptr [[ARRAYIDX120]], align 2
; CHECK-NEXT:    call void @llvm.quantum.cphase(i16 [[TMP143]], i16 [[TMP144]], double 0x400921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX118:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[TMP145:%.*]] = load i16, ptr [[ARRAYIDX118]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP145]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX12:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[ARRAYIDX13:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 6
; CHECK-NEXT:    [[ARRAYIDX117:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 6
; CHECK-NEXT:    [[TMP146:%.*]] = load i16, ptr [[ARRAYIDX117]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP146]], double 0x3FF921FB54442D18, double 0x4012D97C7F3321D2, i32 0)
; CHECK-NEXT:    [[ARRAYIDX115:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[TMP147:%.*]] = load i16, ptr [[ARRAYIDX115]], align 2
; CHECK-NEXT:    [[ARRAYIDX116:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 6
; CHECK-NEXT:    [[TMP148:%.*]] = load i16, ptr [[ARRAYIDX116]], align 2
; CHECK-NEXT:    call void @llvm.quantum.cphase(i16 [[TMP147]], i16 [[TMP148]], double 0x400921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX114:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 6
; CHECK-NEXT:    [[TMP149:%.*]] = load i16, ptr [[ARRAYIDX114]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP149]], double 0x3FF921FB54442D18, double 0x3FF921FB54442D18, i32 0)
; CHECK-NEXT:    [[ARRAYIDX11:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[ARRAYIDX113:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[TMP150:%.*]] = load i16, ptr [[ARRAYIDX113]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP150]], double 0x40142AD833D5964B, double 0.000000e+00, i32 0)
; CHECK-NEXT:    [[ARRAYIDX10:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[ARRAYIDX112:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[TMP151:%.*]] = load i16, ptr [[ARRAYIDX112]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP151]], double 0x3FF412DB519D4FE8, double 0.000000e+00, i32 0)
; CHECK-NEXT:    [[ARRAYIDX9:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[ARRAYIDX111:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[TMP152:%.*]] = load i16, ptr [[ARRAYIDX111]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP152]], double 0x4028C148BD7CD19C, double 0.000000e+00, i32 0)
; CHECK-NEXT:    [[ARRAYIDX8:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[ARRAYIDX110:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[TMP153:%.*]] = load i16, ptr [[ARRAYIDX110]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP153]], double 0x40206E02BC4AC2D2, double 0.000000e+00, i32 0)
; CHECK-NEXT:    [[ARRAYIDX7:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[ARRAYIDX109:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[TMP154:%.*]] = load i16, ptr [[ARRAYIDX109]], align 2
; CHECK-NEXT:    call void @llvm.quantum.rotxy(i16 [[TMP154]], double 0x4024EA7BEB762BBB, double 0.000000e+00, i32 0)
; CHECK-NEXT:    [[ARRAYIDX6:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[ARRAYIDX108:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
; CHECK-NEXT:    [[TMP155:%.*]] = load i16, ptr [[ARRAYIDX108]], align 2
; CHECK-NEXT:    call void @llvm.quantum.measz(i16 [[TMP155]], ptr @c, i1 false, i32 0)
; CHECK-NEXT:    [[ARRAYIDX5:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[ARRAYIDX107:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
; CHECK-NEXT:    [[TMP156:%.*]] = load i16, ptr [[ARRAYIDX107]], align 2
; CHECK-NEXT:    call void @llvm.quantum.measz(i16 [[TMP156]], ptr getelementptr inbounds ([7 x i8], ptr @c, i64 0, i64 1), i1 false, i32 0)
; CHECK-NEXT:    [[ARRAYIDX4:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[ARRAYIDX106:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
; CHECK-NEXT:    [[TMP157:%.*]] = load i16, ptr [[ARRAYIDX106]], align 2
; CHECK-NEXT:    call void @llvm.quantum.measz(i16 [[TMP157]], ptr getelementptr inbounds ([7 x i8], ptr @c, i64 0, i64 2), i1 false, i32 0)
; CHECK-NEXT:    [[ARRAYIDX3:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[ARRAYIDX105:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
; CHECK-NEXT:    [[TMP158:%.*]] = load i16, ptr [[ARRAYIDX105]], align 2
; CHECK-NEXT:    call void @llvm.quantum.measz(i16 [[TMP158]], ptr getelementptr inbounds ([7 x i8], ptr @c, i64 0, i64 3), i1 false, i32 0)
; CHECK-NEXT:    [[ARRAYIDX2:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[ARRAYIDX104:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
; CHECK-NEXT:    [[TMP159:%.*]] = load i16, ptr [[ARRAYIDX104]], align 2
; CHECK-NEXT:    call void @llvm.quantum.measz(i16 [[TMP159]], ptr getelementptr inbounds ([7 x i8], ptr @c, i64 0, i64 4), i1 false, i32 0)
; CHECK-NEXT:    [[ARRAYIDX1:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[ARRAYIDX103:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
; CHECK-NEXT:    [[TMP160:%.*]] = load i16, ptr [[ARRAYIDX103]], align 2
; CHECK-NEXT:    call void @llvm.quantum.measz(i16 [[TMP160]], ptr getelementptr inbounds ([7 x i8], ptr @c, i64 0, i64 5), i1 false, i32 0)
; CHECK-NEXT:    [[ARRAYIDX:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 6
; CHECK-NEXT:    [[ARRAYIDX102:%.*]] = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 6
; CHECK-NEXT:    [[TMP161:%.*]] = load i16, ptr [[ARRAYIDX102]], align 2
; CHECK-NEXT:    call void @llvm.quantum.measz(i16 [[TMP161]], ptr getelementptr inbounds ([7 x i8], ptr @c, i64 0, i64 6), i1 false, i32 2)
; CHECK-NEXT:    br label [[AQCC_MEAS_MOVE_END:%.*]]
; CHECK:       aqcc.meas.move.end:
; CHECK-NEXT:    ret void
;
entry:
  br label %aqcc.quantum

aqcc.quantum:                                     ; preds = %entry
  %arrayidx101 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
  call void @_Z1XRt(ptr %arrayidx101)
  %arrayidx100 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
  call void @_Z1XRt(ptr %arrayidx100)
  %arrayidx99 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
  call void @_Z1XRt(ptr %arrayidx99)
  %arrayidx98 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 6
  call void @_Z1XRt(ptr %arrayidx98)
  %arrayidx96 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
  %arrayidx97 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
  call void @_Z4CNOTRtS_(ptr %arrayidx96, ptr %arrayidx97)
  %arrayidx94 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
  %arrayidx95 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
  call void @_Z4CNOTRtS_(ptr %arrayidx94, ptr %arrayidx95)
  %arrayidx92 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
  %arrayidx93 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
  call void @_Z4CNOTRtS_(ptr %arrayidx92, ptr %arrayidx93)
  %arrayidx91 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 6
  call void @_Z2RZRtd(ptr %arrayidx91, double 0x4027B0228ED0F7FD)
  %arrayidx90 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
  call void @_Z2RZRtd(ptr %arrayidx90, double 0x4023208DCA464625)
  %arrayidx89 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
  call void @_Z2RZRtd(ptr %arrayidx89, double 8.000000e+00)
  %arrayidx88 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
  call void @_Z2RZRtd(ptr %arrayidx88, double 0x3FF6A4AADAA35752)
  %arrayidx87 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
  call void @_Z2RZRtd(ptr %arrayidx87, double 8.000000e+00)
  %arrayidx86 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
  call void @_Z2RZRtd(ptr %arrayidx86, double 0x40225AB85AA5E40E)
  %arrayidx85 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
  call void @_Z2RZRtd(ptr %arrayidx85, double 8.000000e+00)
  %arrayidx84 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
  call void @_Z1HRt(ptr %arrayidx84)
  %arrayidx83 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
  call void @_Z1HRt(ptr %arrayidx83)
  %arrayidx82 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
  call void @_Z1HRt(ptr %arrayidx82)
  %arrayidx81 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
  call void @_Z2RZRtd(ptr %arrayidx81, double 0x3FFB7812AEEF4459)
  %arrayidx80 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
  call void @_Z2RZRtd(ptr %arrayidx80, double 0x3FFB7812AEEF4459)
  %arrayidx79 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
  call void @_Z2RZRtd(ptr %arrayidx79, double 0x3FFB7812AEEF4459)
  %arrayidx77 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
  %arrayidx78 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
  call void @_Z4CNOTRtS_(ptr %arrayidx77, ptr %arrayidx78)
  %arrayidx75 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
  %arrayidx76 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
  call void @_Z4CNOTRtS_(ptr %arrayidx75, ptr %arrayidx76)
  %arrayidx73 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
  %arrayidx74 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
  call void @_Z4CNOTRtS_(ptr %arrayidx73, ptr %arrayidx74)
  %arrayidx72 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
  call void @_Z2RZRtd(ptr %arrayidx72, double 0x4025B2F8FE66442C)
  %arrayidx71 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
  call void @_Z2RZRtd(ptr %arrayidx71, double 0x4025B2F8FE66442C)
  %arrayidx70 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
  call void @_Z2RZRtd(ptr %arrayidx70, double 0x4025B2F8FE66442C)
  %arrayidx68 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
  %arrayidx69 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
  call void @_Z4CNOTRtS_(ptr %arrayidx68, ptr %arrayidx69)
  %arrayidx66 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
  %arrayidx67 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
  call void @_Z4CNOTRtS_(ptr %arrayidx66, ptr %arrayidx67)
  %arrayidx64 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
  %arrayidx65 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
  call void @_Z4CNOTRtS_(ptr %arrayidx64, ptr %arrayidx65)
  %arrayidx63 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
  call void @_Z1HRt(ptr %arrayidx63)
  %arrayidx62 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
  call void @_Z1HRt(ptr %arrayidx62)
  %arrayidx61 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
  call void @_Z1HRt(ptr %arrayidx61)
  %arrayidx59 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
  %arrayidx60 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
  call void @_Z4CNOTRtS_(ptr %arrayidx59, ptr %arrayidx60)
  %arrayidx57 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
  %arrayidx58 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
  call void @_Z4CNOTRtS_(ptr %arrayidx57, ptr %arrayidx58)
  %arrayidx55 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
  %arrayidx56 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
  call void @_Z4CNOTRtS_(ptr %arrayidx55, ptr %arrayidx56)
  %arrayidx54 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
  call void @_Z2RXRtd(ptr %arrayidx54, double 0x4013C9D45DCAC069)
  %arrayidx52 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
  %arrayidx53 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
  call void @_Z4CNOTRtS_(ptr %arrayidx52, ptr %arrayidx53)
  %arrayidx50 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
  %arrayidx51 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
  call void @_Z4CNOTRtS_(ptr %arrayidx50, ptr %arrayidx51)
  %arrayidx48 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
  %arrayidx49 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 6
  call void @_Z4CNOTRtS_(ptr %arrayidx48, ptr %arrayidx49)
  %arrayidx47 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
  call void @_Z2RZRtd(ptr %arrayidx47, double 0x401C48122CADE12F)
  %arrayidx46 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
  call void @_Z2RZRtd(ptr %arrayidx46, double 8.000000e+00)
  %arrayidx45 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
  call void @_Z2RZRtd(ptr %arrayidx45, double 0x3FFE7C72183E883B)
  %arrayidx44 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
  call void @_Z2RZRtd(ptr %arrayidx44, double 8.000000e+00)
  %arrayidx43 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
  call void @_Z2RZRtd(ptr %arrayidx43, double 0x4018F92744F1072F)
  %arrayidx42 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 6
  call void @_Z2RZRtd(ptr %arrayidx42, double 8.000000e+00)
  %arrayidx41 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
  call void @_Z1HRt(ptr %arrayidx41)
  %arrayidx40 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
  call void @_Z1HRt(ptr %arrayidx40)
  %arrayidx39 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
  call void @_Z1HRt(ptr %arrayidx39)
  %arrayidx38 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
  call void @_Z2RZRtd(ptr %arrayidx38, double 0x3FFB7812AEEF4459)
  %arrayidx37 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
  call void @_Z2RZRtd(ptr %arrayidx37, double 0x3FFB7812AEEF4459)
  %arrayidx36 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
  call void @_Z2RZRtd(ptr %arrayidx36, double 0x3FFB7812AEEF4459)
  %arrayidx34 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
  %arrayidx35 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
  call void @_Z4CNOTRtS_(ptr %arrayidx34, ptr %arrayidx35)
  %arrayidx32 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
  %arrayidx33 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
  call void @_Z4CNOTRtS_(ptr %arrayidx32, ptr %arrayidx33)
  %arrayidx30 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 6
  %arrayidx31 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
  call void @_Z4CNOTRtS_(ptr %arrayidx30, ptr %arrayidx31)
  %arrayidx29 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
  call void @_Z2RZRtd(ptr %arrayidx29, double 0x4025B2F8FE66442C)
  %arrayidx28 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
  call void @_Z2RZRtd(ptr %arrayidx28, double 0x4025B2F8FE66442C)
  %arrayidx27 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
  call void @_Z2RZRtd(ptr %arrayidx27, double 0x4025B2F8FE66442C)
  %arrayidx25 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
  %arrayidx26 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
  call void @_Z4CNOTRtS_(ptr %arrayidx25, ptr %arrayidx26)
  %arrayidx23 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
  %arrayidx24 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
  call void @_Z4CNOTRtS_(ptr %arrayidx23, ptr %arrayidx24)
  %arrayidx21 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 6
  %arrayidx22 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
  call void @_Z4CNOTRtS_(ptr %arrayidx21, ptr %arrayidx22)
  %arrayidx20 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
  call void @_Z1HRt(ptr %arrayidx20)
  %arrayidx19 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
  call void @_Z1HRt(ptr %arrayidx19)
  %arrayidx18 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
  call void @_Z1HRt(ptr %arrayidx18)
  %arrayidx16 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
  %arrayidx17 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
  call void @_Z4CNOTRtS_(ptr %arrayidx16, ptr %arrayidx17)
  %arrayidx14 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
  %arrayidx15 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
  call void @_Z4CNOTRtS_(ptr %arrayidx14, ptr %arrayidx15)
  %arrayidx12 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
  %arrayidx13 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 6
  call void @_Z4CNOTRtS_(ptr %arrayidx12, ptr %arrayidx13)
  %arrayidx11 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
  call void @_Z2RXRtd(ptr %arrayidx11, double 0x40142AD833D5964B)
  %arrayidx10 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
  call void @_Z2RXRtd(ptr %arrayidx10, double 0x3FF412DB519D4FE8)
  %arrayidx9 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
  call void @_Z2RXRtd(ptr %arrayidx9, double 0x4028C148BD7CD19C)
  %arrayidx8 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
  call void @_Z2RXRtd(ptr %arrayidx8, double 0x40206E02BC4AC2D2)
  %arrayidx7 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
  call void @_Z2RXRtd(ptr %arrayidx7, double 0x4024EA7BEB762BBB)
  %arrayidx6 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 0
  call void @_Z5MeasZRtRbb(ptr %arrayidx6, ptr @c, i1 false)
  %arrayidx5 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 1
  call void @_Z5MeasZRtRbb(ptr %arrayidx5, ptr getelementptr inbounds ([7 x i8], ptr @c, i64 0, i64 1), i1 false)
  %arrayidx4 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 2
  call void @_Z5MeasZRtRbb(ptr %arrayidx4, ptr getelementptr inbounds ([7 x i8], ptr @c, i64 0, i64 2), i1 false)
  %arrayidx3 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 3
  call void @_Z5MeasZRtRbb(ptr %arrayidx3, ptr getelementptr inbounds ([7 x i8], ptr @c, i64 0, i64 3), i1 false)
  %arrayidx2 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 4
  call void @_Z5MeasZRtRbb(ptr %arrayidx2, ptr getelementptr inbounds ([7 x i8], ptr @c, i64 0, i64 4), i1 false)
  %arrayidx1 = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 5
  call void @_Z5MeasZRtRbb(ptr %arrayidx1, ptr getelementptr inbounds ([7 x i8], ptr @c, i64 0, i64 5), i1 false)
  %arrayidx = getelementptr inbounds [7 x i16], ptr @q, i64 0, i64 6
  call void @_Z5MeasZRtRbb(ptr %arrayidx, ptr getelementptr inbounds ([7 x i8], ptr @c, i64 0, i64 6), i1 false)
  br label %aqcc.meas.move.end

aqcc.meas.move.end:                               ; preds = %aqcc.quantum
  ret void
}

; Function Attrs: mustprogress norecurse nounwind uwtable
define dso_local noundef i32 @main() local_unnamed_addr #1 {
; CHECK-LABEL: define dso_local noundef i32 @main
; CHECK-SAME: () local_unnamed_addr #[[ATTR1:[0-9]+]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    tail call void @_Z5mbl_7v.stub() #[[ATTR2:[0-9]+]]
; CHECK-NEXT:    ret i32 0
;
entry:
  tail call void @_Z5mbl_7v.stub() #2
  ret i32 0
}

; Function Attrs: nounwind
declare void @llvm.quantum.qubit(ptr) #2

; Function Attrs: nounwind
declare void @llvm.quantum.param(double) #2

; Function Attrs: nounwind
declare void @llvm.quantum.cbit(ptr) #2

declare i32 @_ZN4qrt021initializeQrtSystem64EPdPcS1_(ptr, ptr, ptr)

declare i1 @_ZN4qrt013isInitializedEv()

declare void @_ZN4qrt020updateMeasurementMapEPbmb(ptr, i64, i1)

declare i32 @_ZN4qrt014scheduleKernelEPFvvEj(ptr, i32)

declare i32 @_ZN4qrt018dismantleQrtSystemEv()

attributes #0 = { mustprogress noinline nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { mustprogress norecurse nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nounwind }
