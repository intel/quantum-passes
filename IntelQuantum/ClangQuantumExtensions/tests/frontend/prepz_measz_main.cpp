// NOTE: Assertions have been autogenerated by utils/update_cc_test_checks.py UTC_ARGS: --version 3
// RUN: %clang -S -emit-llvm %include_dirs %loadintelclangextensions  %s -o - | FileCheck %s --dump-input fail
// REQUIRES: quantum-registered-target





// HOST: target triple = "x86_64-unknown-linux-gnu"

#include "clang/Quantum/quintrinsics.h"

// CHECK-LABEL: define dso_local noundef i32 @main(
// CHECK-SAME: ) #[[ATTR2:[0-9]+]] {
// CHECK:    [[RETVAL:%.*]] = alloca i32, align 4
// CHECK-NEXT:    [[Q0:%.*]] = alloca i16, align 2
// CHECK-NEXT:    [[Q1:%.*]] = alloca i16, align 2
// CHECK-NEXT:    store i32 0, ptr [[RETVAL]], align 4
// CHECK-NEXT:    call void @_Z5PrepZRt(ptr noundef nonnull align 2 dereferenceable(2) [[Q0]])
// CHECK-NEXT:    call void @_Z5PrepZRt(ptr noundef nonnull align 2 dereferenceable(2) [[Q1]])
// CHECK-NEXT:    ret i32 0
//
int main() {
  qbit q0;

  qbit q1;

  PrepZ(q0);
  PrepZ(q1);

  /// NOTE: 04/13/2022 - Commented out measurement operation(s) since they are
  ///       being redesigned and measurement is not necessary for this test.
  // __quantum_measz(q0, 0);
  // __quantum_measz(q0, 0);
  return 0;
}



