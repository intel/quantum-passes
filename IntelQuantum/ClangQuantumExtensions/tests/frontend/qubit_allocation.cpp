// NOTE: Assertions have been autogenerated by utils/update_cc_test_checks.py UTC_ARGS: --version 3
// RUN: %clang -S -emit-llvm %include_dirs %loadintelclangextensions  %s -o - | FileCheck %s --dump-input fail


#include "clang/Quantum/quintrinsics.h"

/* <--- Main function : spot check ---> */
// CHECK-LABEL: define dso_local noundef i32 @main(
// CHECK-SAME: ) #[[ATTR2:[0-9]+]] {
// CHECK:    [[RETVAL:%.*]] = alloca i32, align 4
// CHECK-NEXT:    [[Q1:%.*]] = alloca [1 x i16], align 2
// CHECK-NEXT:    [[Q2:%.*]] = alloca [2 x i16], align 2
// CHECK-NEXT:    [[Q4:%.*]] = alloca [4 x i16], align 2
// CHECK-NEXT:    [[Q8:%.*]] = alloca [8 x i16], align 16
// CHECK-NEXT:    [[Q16:%.*]] = alloca [16 x i16], align 16
// CHECK-NEXT:    [[Q32:%.*]] = alloca [32 x i16], align 16
// CHECK-NEXT:    [[Q64:%.*]] = alloca [64 x i16], align 16
// CHECK-NEXT:    [[Q128:%.*]] = alloca [128 x i16], align 16
// CHECK-NEXT:    [[Q256:%.*]] = alloca [256 x i16], align 16
// CHECK-NEXT:    [[Q512:%.*]] = alloca [512 x i16], align 16
// CHECK-NEXT:    [[Q1024:%.*]] = alloca [1024 x i16], align 16
// CHECK-NEXT:    store i32 0, ptr [[RETVAL]], align 4
// CHECK-NEXT:    ret i32 0
//
int main() {

  qbit q1[1];

  qbit q2[2];

  qbit q4[4];

  qbit q8[8];

  qbit q16[16];

  qbit q32[32];

  qbit q64[64];

  qbit q128[128];

  qbit q256[256];

  qbit q512[512];

  qbit q1024[1024];

  return 0;

}
