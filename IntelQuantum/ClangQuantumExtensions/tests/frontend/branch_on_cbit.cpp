// NOTE: Assertions have been autogenerated by utils/update_cc_test_checks.py UTC_ARGS: --version 3
// RUN: %clang -S -emit-llvm %include_dirs %loadintelclangextensions  %s -o - | FileCheck %s --dump-input fail


#include "clang/Quantum/quintrinsics.h"

const int N =1;
qbit q[N];

// CHECK-LABEL: define dso_local void @_Z6DoBodyRb(
// CHECK-SAME: ptr noundef nonnull align 1 dereferenceable(1) [[C:%.*]]) #[[ATTR0:[0-9]+]] section ".qbbs_text" {
// CHECK:    [[C_ADDR:%.*]] = alloca ptr, align 8
// CHECK-NEXT:    store ptr [[C]], ptr [[C_ADDR]], align 8
// CHECK-NEXT:    [[TMP0:%.*]] = load ptr, ptr [[C_ADDR]], align 8
// CHECK-NEXT:    call void @_Z5MeasZRtRbb(ptr noundef nonnull align 2 dereferenceable(2) @q, ptr noundef nonnull align 1 dereferenceable(1) [[TMP0]], i1 noundef zeroext false)
// CHECK-NEXT:    ret void
//
quantum_kernel void DoBody(cbit &c){

  MeasZ(q[0], c);

}

// CHECK-LABEL: define dso_local noundef i32 @main(
// CHECK-SAME: ) #[[ATTR2:[0-9]+]] {
// CHECK:    [[RETVAL:%.*]] = alloca i32, align 4
// CHECK-NEXT:    [[C:%.*]] = alloca i8, align 1
// CHECK-NEXT:    store i32 0, ptr [[RETVAL]], align 4
// CHECK-NEXT:    br label %[[DO_BODY:.*]]
// CHECK:       [[DO_BODY]]:
// CHECK-NEXT:    call void @_Z6DoBodyRb(ptr noundef nonnull align 1 dereferenceable(1) [[C]])
// CHECK-NEXT:    br label %[[DO_COND:.*]]
// CHECK:       [[DO_COND]]:
// CHECK-NEXT:    [[TMP0:%.*]] = load i8, ptr [[C]], align 1
// CHECK-NEXT:    [[TOBOOL:%.*]] = trunc i8 [[TMP0]] to i1
// CHECK-NEXT:    br i1 [[TOBOOL]], label %[[DO_BODY]], label %[[DO_END:.*]], !llvm.loop [[LOOP6:![0-9]+]]
// CHECK:       [[DO_END]]:
// CHECK-NEXT:    ret i32 0
//
int main(){

  cbit c;

  do{
    DoBody(c);
   } while(c);

  return 0;
}
























